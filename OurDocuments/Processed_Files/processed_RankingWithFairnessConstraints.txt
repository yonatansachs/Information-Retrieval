rank
fair
constraint
elisa
celi
damian
straszak
nisheeth
vishnoi
arxiv
1704
06840v4
cs
ds
30
jul
2018
cole
polytechniqu
fe
de
rale
de
lausann
epfl
switzerland
abstract
rank
algorithm
deploy
wide
order
set
item
applic
search
engin
news
feed
recommend
system
recent
studi
howev
shown
left
uncheck
output
rank
algorithm
can
result
decreas
divers
type
content
present
promot
stereotyp
polar
opinion
order
address
issu
studi
follow
variant
tradit
rank
problem
addit
fair
divers
constraint
given
collect
item
along
valu
place
item
particular
posit
rank
collect
sensit
attribut
gender
race
polit
opinion
item
collect
fair
constraint
bound
number
item
attribut
allow
appear
top
posit
rank
goal
output
rank
maxim
valu
respect
origin
rank
qualiti
metric
respect
constraint
problem
encapsul
variou
well-studi
problem
relat
bipartit
hypergraph
match
special
case
turn
hard
approxim
even
simpl
constraint
main
technic
contribut
fast
exact
approxim
algorithm
along
complementari
hard
result
togeth
come
close
settl
approxim
constrain
rank
maxim
problem
unlik
prior
work
approxim
constrain
match
problem
algorithm
run
linear
time
even
number
constraint
polynomi
larg
approxim
ratio
depend
number
constraint
produc
solut
small
constraint
violat
result
reli
insight
constrain
match
problem
object
function
satisfi
certain
properti
appear
common
rank
metric
discount
cumul
gain
dcg
spearman
rho
bradley-terri
along
nest
structur
fair
constraint
content
introduct
model
result
relat
work
proof
overview
polynomi
time
algorithm
12
dynam
programming-bas
exact
algorithm
15
7.1
geometr
interpret
fair
constraint
15
7.2
dynam
program
algorithm
15
algorithm
upper-bound
constraint
17
8.1
integr
lp
solut
17
8.2
fast
greedi
algorithm
19
approxim
algorithm
20
10
hard
result
23
11
discuss
futur
work
26
valu
wij
common
rank
metric
rank-1
metric
bradley-terri
metric
align
metric
31
31
31
32
introduct
select
rank
subset
data
fundament
problem
inform
retriev
core
ubiquit
applic
includ
order
search
result
googl
person
social
media
feed
facebook
twitter
instagram
ecommerc
websit
amazon
ebay
onlin
media
site
netflix
youtub
basic
algorithm
problem
aris
follow
item
webpag
imag
document
goal
output
list
item
order
valuabl
given
user
compani
item
posit
one
given
number
wij
captur
valu
item
contribut
rank
place
posit
valu
can
tailor
particular
queri
user
signific
effort
gone
develop
model
mechan
learn
paramet
mr
08
practic
mani
way
one
arriv
wij
result
slightli
differ
metric
valu
rank
preval
exampl
includ
version
discount
cumul
gain
dcg
jk02
bradley-terri
bt52
spearman
rho
spe04
note
mani
metric
one
necessarili
need
nm
paramet
specifi
typic
degre
freedom
enough
just
specifi
qualiti
item
still
choos
work
gener
set
abstract
import
properti
weight
matrix
satisfi
gener
metric
wij
non-increas
interpret
i1
i2
mean
i1
better
qualiti
i2
valu
rank
can
increas
place
i1
i2
rank
formal
valu
satisfi
follow
properti
known
monoton
mong
condit
wi1
j1
wi2
j1
wi1
j1
wi1
j2
wi1
j1
wi2
j2
wi1
j2
wj1
i2
i1
i2
j1
j2
see
appendix
rank
maxim
problem
find
assign
item
posit
total
valu
obtain
maxim
form
problem
equival
find
maximum
weight
match
complet
bipartit
graph
well
known
solut
hungarian
algorithm
howev
recent
studi
shown
produc
rank
manner
can
result
one
type
content
overrepres
expens
anoth
form
algorithm
bia
can
lead
grave
societ
consequ
search
result
inadvert
promot
stereotyp
under-repres
sensit
attribut
race
gender
kmm15
bcz
16
news
feed
can
promot
extremist
ideolog
chrg16
possibl
even
influenc
result
elect
bae16
bma15
exampl
er15
demonstr
vari
rank
set
news
articl
vote
prefer
undecid
voter
can
manipul
toward
ensur
type
content
overrepres
context
rank
problem
defin
introduc
constrain
rank
maxim
problem
restrict
allow
rank
type
content
domin
ensur
rank
fair
sinc
fair
bia
mean
differ
thing
differ
context
rather
fix
one
specif
notion
fair
allow
user
specifi
set
fair
constraint
word
take
constraint
input
motiv
exampl
consid
set
set
item
consist
imag
comput
scientist
imag
associ
sever
possibl
non-disjoint
sensit
attribut
properti
gender
ethnic
age
subset
size
need
select
rank
user
can
specifi
upper-bound
uk
number
item
properti
allow
appear
top
posit
rank
similarli
lower-bound
lk
formal
let
set
properti
let
set
item
properti
note
set
need
disjoint
let
binari
assign
matrix
whose
j-th
column
contain
one
i-th
posit
item
assign
posit
posit
must
assign
exactli
one
item
item
can
assign
one
posit
say
satisfi
fair
constraint
xij
uk
lk
let
famili
assign
matric
satisfi
fair
constraint
constrain
rank
optim
problem
given
set
item
properti
p1
pp
fair
constraint
lk
uk
valu
wij
find
wij
xij
arg
max
problem
equival
find
maximum
weight
match
size
satisfi
given
fair
constraint
weight
complet
bipartit
graph
now
becom
non-trivi
complex
central
object
studi
paper
beyond
fair
ethic
consider
tradit
diversif
concern
inform
retriev
queri
ambigu
jaguar
refer
car
anim
user
context
user
want
see
webpag
news
articl
academ
paper
imag
can
also
cast
framework
toward
rich
literatur
diversifi
rank
emerg
inform
retriev
high-level
sever
approach
redefin
object
function
incorpor
notion
divers
leav
rank
maxim
problem
unconstrain
common
approach
re-weight
wij
attempt
captur
amount
divers
item
introduc
posit
condit
item
place
posit
see
cg98
zh08
ckc
08
zcl03
zmkl05
cast
directli
unconstrain
multiobject
optim
problem
ys17
altern
approach
mix
togeth
aggreg
differ
rank
gener
differ
interpret
queri
rbcj09
dkns01
divers
also
found
desir
user
ct17
observ
aris
inher
rank
determin
user
upvot
ckk16
despit
effort
fact
major
search
engin
now
diversifi
result
highli
uniform
content
often
still
display
certain
imag
search
can
display
result
almost
entir
attribut
kmm15
gs09
show
singl
diversif
function
can
satisfi
set
natur
axiom
one
want
fair
rank
essenc
tension
relev
fair
wij
item
given
properti
much
higher
rest
approach
correct
overrepresent
henc
reason
cast
problem
constrain
optim
problem
object
still
determin
valu
solut
space
restrict
fair
constraint
theoret
fair
constraint
come
comput
price
constrain
rank
maxim
problem
can
seen
gener
variou
np-hard
problem
independ
set
hypergraph
match
set
pack
unlik
unconstrain
case
even
check
complet
feasibl
rank
np-hard
consequ
gener
hope
produc
solut
violat
constraint
variant
gener
problem
studi
tc
optim
literatur
mention
three
relev
note
may
leav
empti
posit
rank
oppos
select
element
rank
desir
afk96
consid
bipartit
perfect
match
problem
poli
constraint
present
polynomi
time
random
algorithm
find
near
perfect
match
violat
constraint
addit
grsz14
improv
result
approxim
algorithm
howev
run
time
algorithm
2.5
roughli
mk
number
hard
constraint
output
match
sri95
studi
approxim
pack
integ
program
problem
appli
set
give
approxim
algorithm
constrain
rank
maxim
problem
present
result
seem
inadequ
number
fair
constraint
2np
make
run
time
grsz14
larg
addit
violat
render
upper-bound
constraint
impot
main
technic
contribut
paper
fast
exact
approxim
algorithm
constrain
rank
maxim
problem
along
complementari
hard
result
togeth
give
solid
understand
comput
complex
problem
overcom
limit
past
work
constrain
match
problem
result
often
make
use
two
structur
properti
formul
set
constraint
can
broken
group
properti
nest
upper-bound
constraint
one
object
function
satisfi
properti
state
use
properti
obtain
effici
polynomi
even
linear
time
algorithm
problem
variou
interest
regim
properti
natur
inform
retriev
set
use
algorithm
context
involv
rank
model
studi
follow
constrain
rank
maxim
problem
wij
xij
lk
xij
uk
arg
max
rm
rm
set
matric
repres
rank
item
posit
recal
wij
repres
profit
place
item
posit
everi
properti
everi
posit
rank
lk
uk
lower
upper
bound
number
item
properti
allow
top
posit
rank
exampl
refer
figur
distinguish
two
import
special
case
problem
upper-bound
constraint
present
lower-bound
constraint
present
variant
refer
constrain
rank
maxim
problem
constrain
rank
maxim
problem
respect
avoid
confus
sometim
add
lu
talk
gener
problem
type
constraint
present
furthermor
result
hold
assumpt
weight
function
monoton
satisfi
mong
properti
whenev
assumpt
necessari
emphas
fact
say
gener
weight
allow
result
section
present
overview
result
statement
theorem
inform
eas
readabl
formal
statement
defer
later
part
let
type
ti
item
set
properti
item
first
result
exact
algorithm
solv
constrain
rank
maxim
problem
whose
run
time
polynomi
number
distinct
ti
denot
constant
see
theorem
7.1
exampl
valu
matrix
valu
corr
optim
uncon
optim
con
spond
optim
unconstrain
rank
optim
constrain
rank
depict
gray
orang
respect
note
clariti
rank
order
transpos
matrix
refer
text
strain
rank
upper-bound
constraint
posit
violat
men
allow
strain
rank
upper-bound
constraint
posit
longer
violat
fact
constraint
satisfi
figur
simpl
exampl
framework
matrix
wij
present
option
peopl
either
male
blue
femal
yellow
must
rank
assum
singl
upper-bound
constraint
posit
rank
appli
gender
depict
figur
constraint
satisfi
latter
former
weight
two
rank
depict
figur
theorem
3.1
exact
dynam
programming-bas
algorithm
algorithm
solv
constrain
rank
maxim
problem
lu
pqnq
pm
time
valu
satisfi
properti
algorithm
combin
geometr
interpret
problem
along
dynam
program
proce
solv
sequenc
dimension
sub-problem
proof
theorem
3.1
provid
section
allow
larg
problem
np-hard
see
theorem
3.5
gener
may
abl
assum
constant
even
desir
algorithm
whose
run
time
close
size
input
toward
consid
natur
paramet
set
properti
size
largest
ti
name
max
ti
complex
constrain
rank
maxim
problem
turn
show
interest
behavior
respect
note
typic
case
correspond
simplest
practic
set
disjoint
properti
properti
partit
set
item
instanc
set
imag
human
partit
base
ethnic
age
individu
note
even
though
still
larg
previou
theorem
may
prohibit
larg
run
time
prove
constrain
rank
maxim
problem
lu
polynomi
time
solvabl
theorem
3.2
polynomi
time
algorithm
constrain
rank
maxim
time
valu
satisfi
properti
problem
lu
can
solv
obtain
reduc
variant
rank
maxim
problem
minimum
cost
flow
problem
can
solv
effici
network
acycl
note
even
though
run
time
polynomi
might
still
satisfactori
practic
purpos
aim
design
faster
linear
time
algorithm
focu
case
upper-bound
constraint
present
case
analyz
natur
linear
program
lp
relax
constrain
rank
maxim
problem
reveal
interest
structur
problem
motiv
fast
greedi
algorithm
formal
relax
consid
set
ωm
defin
ωm
xij
xij
follow
linear
program
max
ωm
wij
xij
xx
xij
uk
observ
absenc
fair
constraint
repres
maximum
weight
bipartit
match
problem
well
known
feasibl
region
fraction
relax
integr
vertic
henc
optim
valu
two
coincid
howev
constrain
set
even
can
shown
feasibl
region
longer
integr
can
fraction
vertic
see
fact
8.2
reason
true
maxim
linear
object
result
integr
solut
surprisingli
prove
cost
function
consid
special
never
yield
optim
fraction
vertex
solut
theorem
3.3
exact
lp-base
algorithm
see
theorem
8.1
8.3
consid
linear
program
relax
constrain
rank
maxim
problem
object
function
satisfi
exist
optim
solut
integr
entri
henc
relax
exact
exist
greedi
algorithm
find
optim
integr
solut
np
time
proof
reli
combinatori
argument
structur
tight
constraint
crucial
use
assumpt
properti
object
function
note
result
theorem
3.3
impli
particular
whenev
linear
program
feasibl
also
integ
solut
feasibl
rank
can
also
argu
gener
lu
variant
problem
correspond
lp
relax
howev
extend
theorem
3.3
case
seem
challeng
left
open
problem
tri
design
algorithm
larger
difficulti
constrain
rank
feasibl
problem
remain
np-hard
fact
even
hard
approxim
feasibl
guarante
see
theorem
10.1
10.2
togeth
result
impli
unless
restrict
feasibl
instanc
constrain
rank
problem
imposs
obtain
reason
approxim
algorithm
problem
order
bypass
barrier
focu
variant
problem
present
algorithm
verifi
condit
feasibl
argu
natur
context
inform
retriev
consid
set
sk
uk
properti
whose
constraint
increas
least
go
st
kth
posit
observ
follow
abund
item
condit
suffici
feasibl
least
item
ti
sk
intuit
say
alway
least
way
extend
feasibl
rank
item
rank
item
simpl
exampl
show
condit
can
necessari
certain
constraint
uk
practic
assumpt
almost
never
problem
avail
item
webpag
far
outnumb
size
rank
number
result
display
first
page
number
properti
mani
type
webpag
show
assum
condit
linear-tim
algorithm
achiev
approxim
slightli
violat
upper-bound
constraint
result
need
assumpt
rather
wij
non-neg
result
near-optim
provid
log
hard
approxim
result
see
theorem
10.2
theorem
3.4
approxim
algorithm
see
theorem
9.1
constrain
rank
maxim
problem
assumpt
algorithm
linear
time
output
rank
valu
least
time
optim
one
satisfi
upperbound
constraint
twice
multipl
violat
xx
xij
2uk
one
can
construct
artifici
instanc
rank
problem
output
algorithm
inde
violat
upper-bound
constraint
multipl
factor
howev
violat
caus
presenc
high-util
item
larg
number
properti
item
unlik
appear
real-lif
instanc
thu
expect
practic
perform
algorithm
better
worst-cas
bound
given
theorem
3.4
suggest
lastli
summar
hard
result
constrain
rank
problem
theorem
3.5
hard
result
inform
follow
variant
constrain
rank
feasibl
constrain
rank
maxim
problem
np-hard
decid
feasibl
case
theorem
10.1
feasibl
condit
approxim
optim
valu
rank
within
factor
log
theorem
10.2
decid
feasibl
number
item
number
posit
upper-bound
given
input
properti
fix
everi
theorem
10.3
everi
constant
decid
whether
exist
feasibl
solut
everi
solut
violat
constraint
factor
theorem
10.4
relat
work
inform
retriev
focus
select
rank
subset
data
rich
histori
comput
scienc
well-establish
subfield
see
foundat
work
sb88
probabl
rank
principl
prp
form
foundat
inform
retriev
research
mk60
rob77
context
state
system
rank
order
item
decreas
valu
problem
formul
solut
line
subject
satisfi
divers
constraint
relat
problem
divers
data
summar
subset
item
vari
properti
must
select
larg
set
pdsat12
cdkv16
similarli
vote
divers
constraint
subset
item
peopl
vari
properti
attribut
must
select
via
vote
procedur
mon95
chv57
howev
formul
problem
consider
differ
need
produc
rank
select
item
henc
analog
notion
constraint
relax
extend
work
fair
classif
problem
zw
13
fair
rank
problem
also
studi
unconstrain
multi-object
optim
problem
variou
fair
metric
rank
propos
ys17
combin
learn
valu
along
rank
item
also
studi
rkj08
srg13
round
algorithm
choos
order
list
document
function
estim
valu
wij
can
receiv
click
one
click
use
updat
estim
wij
bound
regret
learn
rate
can
given
use
bandit
framework
problem
differ
type
item
can
affect
click
probabl
constraint
display
recent
work
shown
mani
set
imposs
result
prevent
us
attain
properti
item
fair
kmr17
inde
work
focus
ensur
properti
fair
properti
overrepres
howev
come
expens
item
fair
depend
properti
item
may
much
higher
lower
probabl
display
anoth
item
valu
motiv
applic
deal
rank
document
webpag
henc
satisfi
trade-off
howev
consider
may
requir
wish
rank
peopl
give
individu
differ
likelihood
near
top
list
base
properti
rather
sole
valu
organ
rest
paper
section
discuss
relat
work
section
contain
overview
proof
main
result
section
contain
proof
theorem
polynomi
time
algorithm
case
proof
theorem
3.1
exact
algorithm
gener
present
section
section
contain
proof
theorem
3.3
show
exist
integr
solut
also
provid
simpl
fast
greedi
algorithm
rank
maxim
problem
section
contain
proof
theorem
3.4
give
approxim
result
rank
maxim
problem
gener
hard
result
present
section
10
section
11
provid
discuss
possibl
direct
futur
work
open
problem
final
appendix
give
brief
overview
common
rank
metric
explain
can
captur
valu
wij
satisfi
proof
overview
overview
proof
theorem
3.1
first
observ
constrain
rank
maxim
problem
simpl
geometr
interpret
everi
item
can
assign
properti
vector
ti
whose
th
entri
item
properti
otherwis
can
think
constrain
rank
pk
maxim
problem
find
sequenc
distinct
item
i1
i2
lk
tij
uk
uk
vector
whose
th
entri
word
requir
partial
sum
vector
correspond
top
item
rank
stay
within
region
lk1
uk1
lk2
uk2
lkn
ukn
defin
fair
constraint
let
ti
set
differ
properti
vector
ti
appear
item
let
us
denot
element
v1
v2
vq
simpl
import
observ
whenev
two
item
i1
i2
say
i1
i2
properti
vector
ti1
ti2
everi
optim
solut
either
i1
will
rank
i2
i1
rank
neither
use
follow
assumpt
weight
matrix
monoton
satisfi
properti
state
let
us
now
defin
follow
sub-problem
ask
properti
vector
feasibl
solut
given
tupl
s1
s2
sq
nq
s1
s2
sq
optim
way
obtain
feasibl
rank
item
sj
properti
vector
equal
vj
given
solut
sub-problem
use
observ
easi
determin
item
use
given
properti
vector
order
one
can
easili
solv
sub-problem
given
solut
smaller
sub-problem
smaller
sum
sj
result
dynam
program
algorithm
nq
state
henc
roughli
run
time
overview
proof
theorem
3.2
main
idea
reduc
rank
maxim
minimum
cost
flow
problem
observ
sever
structur
properti
result
time
instanc
allow
one
solv
effici
given
instanc
constrain
rank
maxim
problem
construct
weight
flow
network
everi
feasibl
rank
correspond
feasibl
flow
valu
roughli
everi
properti
chain
vertic
construct
place
item
posit
correspond
send
one
unit
flow
chain
correspond
item
kth
vertex
send
flow
sink
edg
weight
gadget
chain
chosen
way
cost
send
unit
path
wi
capac
chain
correspond
properti
implement
upper-bound
constraint
lower-bound
constraint
can
also
enforc
put
appropri
weight
edg
chain
instanc
minimum
cost
flow
problem
construct
np
vertic
nm
edg
acycl
allow
replac
applic
bellman-ford
algorithm
first
phase
success
shortest
path
algorithm
linear-tim
procedur
easili
lead
implement
n2
log
time
overview
proof
theorem
3.3
unlik
case
lp-relax
non-integr
vertex
assign
polytop
even
fraction
vertic
can
aris
see
fact
8.2
theorem
3.3
impli
although
feasibl
region
integr
direct
along
direct
interest
proof
first
reduc
problem
case
one
rank
item
strict
form
properti
inequ
assumpt
strict
strategi
prove
everi
fraction
feasibl
solut
ωm
direct
rm
solut
x0
εy
still
feasibl
weight
larger
weight
impli
everi
optim
solut
necessarili
integr
combinatori
direct
consid
correspond
cycl
underli
complet
bipartit
graph
weight
match
can
improv
swap
edg
along
cycl
argument
show
exist
cycl
make
use
special
structur
constraint
famili
instanc
illustr
approach
suppos
exist
two
item
i1
i2
properti
rank
posit
j1
j2
xi1
j2
xi2
j1
follow
strategi
outlin
consid
x0
εy
rm
zero
everywher
10
except
yi1
j1
yi2
j2
yi1
j2
yi2
j1
like
prove
weight
x0
larger
weight
x0
feasibl
possibl
small
reason
gain
move
direct
follow
properti
feasibl
turn
follow
orthogon
everi
constraint
defin
feasibl
region
inde
constraint
involv
item
i1
i2
correspond
properti
everi
constraint
form1
h1rk
xi
uk
1rk
indic
vector
rectangl
rk
rectangl
contain
either
non-zero
entri
two
non-zero
entri
opposit
sign
none
case
h1rk
yi
use
reason
one
can
show
configur
form
can
appear
optim
solut
i1
i2
share
properti
impli
support
everi
optim
solut
certain
structur
restrict
item
given
properti
structur
allow
us
find
improv
direct
case
solut
integr
prove
integr
show
everi
fraction
solut
rm
exist
fraction
entri
xij
can
slightli
increas
without
violat
fair
constraint
moreov
sinc
i-th
row
j-th
column
must
contain
least
one
fraction
entri
sinc
row
column-sum
can
construct
direct
along
weight
can
increas
choic
correspond
entri
alter
requir
care
otherwis
might
end
violat
fair
constraint
second
part
theorem
3.3
algorithm
solv
constrain
rank
maxim
problem
optim
input
size
run
time
np
show
natur
greedi
algorithm
can
use
precis
one
iter
fill
rank
posit
alway
select
highest
valu
item
still
avail
lead
constraint
violat
induct
argument
base
reli
properti
assumpt
give
correct
procedur
overview
proof
theorem
3.4
let
arbitrari
import
part
algorithm
greedi
procedur
find
larg
weight
solut
slightli
relax
problem
posit
rank
occupi
process
pair
non-increas
order
weight
wij
put
item
posit
whenev
lead
constraint
violat
analyz
approxim
guarante
algorithm
let
us
first
inspect
combinatori
structur
feasibl
set
total
fair
constraint
problem
addit
match
constraint
say
column
row
can
singl
one
solut
matrix
howev
relax
problem
one
rank
posit
fill
one
can
observ
feasibl
set
just
intersect
matroid
common
ground
set
inde
two
correspond
match
constraint
partit
matroid
remain
matroid
correspond
properti
everi
properti
chain
subset
s1
s2
sn
sk
uk
set
independ
set
laminar
matroid
work
jen76
shown
greedi
algorithm
run
intersect
matroid
yield
k-approxim
henc
approxim
algorithm
follow
obtain
better
approxim
bound
care
analysi
requir
proof
base
fact
roughli
new
element
ad
feasibl
solut
element
need
remov
make
feasibl
thu
ad
greedili
denot
inner
product
two
matric
rm
hx
yi
11
pm
pn
xij
yij
one
element
can
cost
us
absenc
element
weight
one
ad
idea
can
formal
use
prove
approxim
greedi
algorithm
akin
framework
k-extend
system
mes06
greedi
procedur
can
altern
analyz
final
observ
sinc
problem
solv
relax
origin
rank
maxim
problem
approxim
ratio
obtain
respect
origin
problem
still
remain
complet
rank
fill
gap
may
left
procedur
can
achiev
greedi
manner
increas
valu
solut
violat
constraint
multipl
factor
overview
proof
theorem
3.5
hard
result
base
gener
observ
one
can
encod
variou
type
pack
constraint
use
instanc
constrain
rank
maxim
feasibl
problem
first
result
theorem
10.1
np-hard
feasibl
problem
establish
reduct
hypergraph
match
problem
given
instanc
hypergraph
match
problem
one
can
think
hyperedg
item
vertic
properti
degre
constraint
vertic
can
encod
upper-bound
constraint
number
item
certain
properti
rank
inapproxim
result
theorem
10.2
also
establish
reduct
hypergraph
match
problem
howev
case
one
need
care
reduct
requir
output
instanc
feasibl
next
hard
result
theorem
10.3
illustr
difficulti
constrain
rank
optim
problem
entir
due
upper-bound
number
uk
particular
even
part
input
correspond
item
properti
fix
depend
henc
can
pre-process
fj12
problem
remain
hard
proven
via
reduct
independ
set
problem
properti
consist
pair
item
i1
i2
i1
i2
given
graph
vertic
can
set
constrain
rank
problem
whose
solut
independ
set
certain
size
sinc
everi
edg
i1
i2
properti
can
set
constraint
allow
one
item
vertex
properti
edg
rank
final
theorem
10.4
state
hard
decid
feasibl
even
find
solut
violat
constraint
constant
multipl
factor
obstacl
prove
hard
result
typic
even
given
instanc
infeas
easi
find
solut
violat
mani
constraint
small
amount
overcom
problem
employ
inapproxim
result
maximum
independ
set
problem
has96
idea
ck05
reduct
roughli
put
constraint
everi
cliqu
input
graph
one
vertex
item
pick
solut
violat
constraint
multipl
factor
correspond
set
vertic
induc
subgraph
c-cliqu
properti
allow
us
prove
use
elementari
bound
ramsey
number
larg
independ
set
henc
given
algorithm
abl
find
feasibl
rank
c-factor
violat
constraint
can
approxim
maximum
size
independ
set
graph
factor
roughli
hard
has96
polynomi
time
algorithm
proof
theorem
3.2
show
solv
constrain
rank
maxim
problem
reformul
minimum
cost
flow
problem
direct
network
clariti
begin
case
upper-bound
constraint
present
modifi
12
construct
deal
lower-bound
well
given
instanc
constrain
rank
maxim
problem
build
direct
weight
capacit
graph
solut
min
cost
flow
problem
allow
us
solv
instanc
rank
problem
two
special
vertic
sourc
sink
respect
everi
posit
rank
vertex
γk
correspond
everi
properti
vertic
thu
total
np
vertic
proceed
describ
edg
everi
posit
edg
γk
unit
capac
zero
cost
everi
properti
everi
posit
edg
γk
unit
capac
zero
cost
final
vertic
arrang
direct
chain
describ
correspond
edg
let
us
denot
item
properti
increas
order
i1
i2
i3
number
item
properti
vertex
connect
edg
one
item
properti
unit
capac
cost
zero
everi
exactli
edg
go
unit
capac
cost
follow
wi1
wi1
wi2
wi2
wiu
wiu
defin
wi
everi
item
idea
behind
construct
send
one
unit
flow
posit
way
posit
incur
cost
neg
wi1
correspond
place
i1
best
item
properti
posit
flow
sent
γk
guarante
posit
rank
use
twice
thu
everi
flow
valu
correspond
feasibl
rank
cost
neg
total
weight
given
rank
similarli
optim
rank
flow
valu
correspond
now
prove
intuit
formal
rank
flow
show
optim
rank
can
translat
feasibl
flow
valu
cost
nk
wπ
let
us
start
simpl
observ
everi
properti
rel
order
appear
item
properti
consist
order
indic
i1
i2
i3
follow
mong
properti
satisfi
swap
item
incostist
pair
caus
rank
higher
total
weight
see
proof
theorem
7.1
detail
construct
feasibl
flow
scan
rank
top
bottom
add
one
flow
path
time
suppos
item
place
posit
let
uniqu
properti
item
send
one
unit
flow
along
follow
path
γk
pick
edg
path
correspond
item
possibl
observ
cost
contribut
path
wi
wi
wi
wi
wi
wi
wi
thu
total
cost
nk
wπ
claim
remain
observ
flow
inde
feasibl
sinc
construct
capac
along
chain
correspond
upper
bound
constraint
13
figur
illustr
graph
chain
correspond
properti
connect
γ-vertic
note
number
edg
henc
might
grow
γ1
γ2
γn
flow
rank
suppos
feasibl
flow
valu
cost
cost
show
feasibl
rank
weight
least
cost
attempt
construct
rank
let
us
first
modifi
flow
forc
certain
structur
consid
properti
posit
rank
unit
flow
sent
will
assum
go
edg
smallest
cost
word
i1
i2
i3
item
properti
increas
order
edg
pick
cost
wi1
wi1
wi2
wi2
wic
wic
fact
edg
smallest
cost
follow
mong
properti
given
structur
flow
can
easili
construct
rank
weight
suppos
unit
flow
enter
chain
leav
vertic
γk1
γk2
γkc
set
k1
i1
k2
i2
kc
ic
i1
i2
ic
best
item
properti
cost
part
flow
correspond
wi1
k1
wi2
k2
wic
kc
pn
total
wπ
feasibl
rank
follow
fact
unit
flow
reach
thu
mani
item
properti
rank
top-k
posit
far
reduct
captur
variant
rank
problem
deal
lowerbound
will
slightli
modifi
edg
cost
construct
flow
network
end
introduc
number
larg
significantli
larger
entri
weight
matrix
properti
posit
rank
modifi
cost
edg
wi1
wi1
wil
wil
wil
wil
wiu
wiu
smallest
cost
edg
cost
decreas
can
now
make
larg
forc
edg
sent
flow
total
neg
cost
14
thu
particular
minimum
cost
flow
still
correspond
feasibl
rank
ing
exist
weight
optim
rank
recov
cost
solv
construct
instanc
minimum
cost
flow
note
first
network
contain
negative-cost
cycl
fact
acycl
suffici
condit
problem
polynomial-tim
solvabl
one
can
use
success
shortest
augment
path
algorithm
see
amo93
solv
problem
effici
initi
comput
node
potenti
one
need
use
bellman-ford
algorithm
run
time
pmn2
take
advantag
fact
acycl
comput
singl
sourc
shortest
path
sort
vertic
topolog
run
simpl
dynam
program
procedur
algorithm
need
augment
flow
time
augment
requir
run
dijkstra
algorithm
take
log
mn
log
time
thu
total
run
time
algorithm
nm
mn
log
n2
log
dynam
programming-bas
exact
algorithm
recal
instanc
constrain
rank
maxim
everi
item
type
ti
assign
set
properti
item
section
present
exact
dynam
program
algorithm
solv
constrain
rank
maxim
problem
effici
number
distinct
type
instanc
small
start
provid
geometr
viewpoint
problem
arguabl
make
easier
visual
provid
us
conveni
notat
dynam
program
algorithm
simpler
state
understand
7.1
geometr
interpret
fair
constraint
recal
instanc
constrain
rank
maxim
given
item
rank
posit
properti
togeth
fair
constraint
let
ti
1ti
vector
indic
set
item
belong
call
type
note
everi
rank
can
describ
either
binari
matrix
xij
item
rank
posit
altern
one-to-on
function
item
rank
posit
everi
use
latter
convent
can
encod
fair
condit
lk
tπ
uk
lk
lk1
lk2
lkp
uk
uk1
uk2
ukp
vector
lower
upperbound
posit
word
rank
feasibl
kth
partial
sum
ti
vector
item
top-k
posit
belong
rectangl
lk1
uk1
lk2
uk2
lkp
ukp
everi
7.2
dynam
program
algorithm
theorem
7.1
algorithm
solv
constrain
rank
maxim
problem
lu
object
function
satisfi
properti
mp
pqnq
time
number
differ
type
item
15
proof
conveni
assum
matrix
satisfi
strict
variant
properti
inequ
strict
gener
case
follow
analog
argument
item
recal
ti
1ti
vector
indic
set
item
belong
let
ti
set
realiz
type
denot
element
v1
v2
vq
everi
defin
ti
let
everi
denot
i1
i2
iq
list
item
increas
order
note
optim
solut
rank
maxim
problem
exactli
item
come
item
exactli
i1
appear
increas
order
solut
follow
properti
follow
suppos
item
i1
place
posit
j2
item
i2
place
posit
j1
i1
i2
j1
j2
swap
two
item
rank
affect
feasibl
solut
differ
valu
wi1
j1
wi2
j2
wi1
j2
wi2
j1
posit
due
strict
properti
henc
swap
can
increas
weight
solut
similar
reason
show
benefici
swap
rank
item
i2
unrank
item
i1
whenev
i1
i2
one
consequ
observ
can
assum
henc
nq
can
keep
best
item
everi
set
discard
remain
one
will
part
optim
solut
discard
can
done
time
roughli
instanc
given
allow
us
reduc
number
candid
rank
one
check
roughli
howev
number
still
prohibit
larg
mani
scenario
interest
construct
dynam
program
algorithm
much
fewer
state
nqp
now
consid
follow
sub-problem
tupl
s1
s2
sq
nq
let
s1
s2
sq
largest
weight
feasibl
rank
top-k
posit
occupi
exactli
item
pick
everi
let
us
now
describ
algorithm
comput
s1
s2
sq
first
initi
entri
s1
s2
sq
set
next
consid
valid
tupl
s1
s2
sq
order
increas
valu
suppos
like
comput
s1
s2
sq
first
one
must
check
whether
fair
constraint
posit
satisfi
calcul
note
th
coordin
repres
number
item
properti
henc
necessari
condit
tupl
s1
s2
sq
repres
feasibl
rank
lk
uk
satisfi
just
set
s1
s2
sq
otherwis
consid
possibl
type
item
place
last
posit
suppos
type
belong
s1
s2
sq
s1
sq
wik
henc
order
comput
s1
s2
sq
simpli
iter
possibl
type
find
maximum
valu
can
get
correct
follow
fact
th
item
type
everi
optim
rank
alway
total
number
sub-problem
henc
algorithm
can
implement
time
nq
time
requir
read
input
construct
16
list
element
everi
given
type
second
term
nq
appear
nq
subproblem
sub-problem
consid
case
everi
case
feasibl
check
take
time
algorithm
upper-bound
constraint
8.1
integr
lp
solut
theorem
8.1
consid
lp
relax
constrain
rank
maxim
problem
properti
p1
pp
pairwis
disjoint
rm
satisfi
exist
optim
integr
solut
proof
without
loss
gener
can
assum
via
simpl
extens
problem
follow
extend
matrix
rm
squar
matrix
rm
set
wij
eij
everi
set
uk
constraint
impos
posit
note
still
satisfi
properti
moreov
everi
solut
ωm
origin
problem
can
extend
solut
ωm
preserv
weight
xi
hw
ei
denot
inner
product
two
matric
hw
xi
pm
pm
hw
similarli
everi
solut
extend
problem
restrict
first
ij
ij
column
yield
solut
origin
problem
weight
thu
suffic
prove
extend
problem
optim
integr
solut
remaind
section
assum
simplic
assum
matrix
satisfi
strict
variant
properti
inequ
strict
can
achiev
small
perturb
weight
without
chang
optim
rank
proof
consist
two
phase
first
phase
show
everi
optim
solut
satisfi
certain
properti
support
second
phase
show
optim
solut
properti
can
fraction
entri
let
us
state
properti
feasibl
solut
ωm
like
establish
i1
i2
j1
j2
i1
i2
j1
j2
xi2
j1
xi1
j2
word
whenev
two
item
i1
i2
properti
i1
i2
i1
better
i2
posit
j1
j2
j1
j2
xi2
j1
xi1
j2
posit
show
satisfi
condit
optim
end
take
fraction
solut
i1
i2
j1
j2
condit
hold
now
consid
solut
form
x0
i1
j1
i2
j2
i1
j2
i2
j1
rm
denot
matrix
singl
non-zero
entri
valu
sinc
xi1
j2
xi2
j1
can
find
x0
furthermor
pn
claim
solut
still
feasibl
inde
everi
item
yij
can
conclud
x0ij
17
xij
pm
similarli
everi
rank
posit
xi
xi
henc
ωm
remain
show
x0
satisfi
fair
constraint
note
enough
consid
fair
constraint
come
properti
i1
i2
i1
i2
variabl
xi1
j1
xi1
j2
xi2
j1
xi2
j2
appear
constraint
everi
constraint
form
h1rk
xi
uk
1rk
indic
vector
matrix
rectangl
submatrix
sinc
h1rk
yi
everi
rectangl
1rk
x0
h1rk
εyi
h1rk
xi
uk
therefor
x0
feasibl
furthermor
strict
properti
x0
hw
xi
wi1
j1
wi2
j2
wi1
j2
wi2
j1
hw
xi
feasibl
solut
strictli
better
object
valu
conclud
optim
henc
everi
optim
solut
necessarili
satisfi
suppos
now
sake
contradict
satisfi
integr
consid
fraction
entri
xi0
j0
i0
small
possibl
case
tie
j0
small
possibl
suppos
item
i0
belong
note
exist
entri
i0
j1
j1
j0
xi0
j1
due
fact
i0
j0
xi0
xi0
j0
fix
smallest
possibl
j1
properti
constraint
xij0
exist
least
one
fraction
entri
j0
th
column
let
us
call
xi1
j0
follow
i1
i0
note
also
i1
i1
condit
violat
let
us
consid
new
candid
solut
use
indic
defin
x0
i1
j1
i2
j2
i1
j2
i2
j1
show
x0
feasibl
contradict
fact
optim
strict
version
properti
suffic
ensur
x0
violat
fair
constraint
impos
properti
note
j0
j0
j1
constraint
xx
xx
xij
uk
x0ij
remain
satisfi
henc
remain
show
constraint
kj
xij
uk
tight
j0
j0
j1
observ
choic
i0
j0
entri
rectangl
j0
integr
furthermor
rectangl
j0
j0
j1
non-zero
entri
xi0
j0
due
fact
xi0
j1
condit
satisfi
now
uk
kj
xij
constraint
tight
thu
x0
feasibl
henc
optim
solut
henc
optim
solut
fraction
entri
contrast
theorem
vertic
feasibl
region
might
non-integr
fact
8.2
exist
instanc
rank
maxim
problem
feasibl
region
fraction
vertic
18
proof
let
suppos
one
properti
p1
constraint
u21
uk1
word
constrain
rank
element
properti
top-2
entri
consid
follow
point
clearli
feasibl
observ
support
2n
element
exactli
mani
linearli
independ
tight
constraint
point
inde
doubly-stochast
constraint
give
us
2n
constraint
2n
linearli
independ
remain
one
x1
x1
x2
x2
therefor
non-integr
vertex
feasibl
region
8.2
fast
greedi
algorithm
due
special
structur
abl
find
fast
simpl
algorithm
rank
maxim
problem
case
theorem
8.3
exist
algorithm
given
instanc
constrain
rank
maxim
problem
object
function
satisfi
properti
output
optim
rank
time
proof
simplic
assum
satisfi
strict
variant
properti
strict
inequ
definit
can
assum
without
loss
gener
slightli
perturb
consid
follow
greedi
algorithm
iter
construct
rank
item
rank
posit
let
smallest
index
item
yet
pick
can
ad
posit
without
violat
constraint
output
infeas
set
output
clear
algorithm
output
rank
feasibl
assum
now
inde
output
rank
will
show
optim
take
optim
rank
let
properti
let
i1
i2
list
item
increas
order
claim
rank
exactli
item
i1
i2
ir
order
note
swap
two
element
say
i1
i2
posit
j2
j1
rank
say
j1
j2
chang
weight
equal
wi1
j1
wi2
j2
wi1
j2
wi2
j1
altern
notat
make
exposit
section
cleaner
see
also
notat
problem
formul
section
7.1
19
strict
properti
henc
alway
benefici
rank
item
increas
order
furthermor
can
argu
use
monoton
alway
optim
select
item
smallest
indic
rank
one
consequ
observ
can
assum
henc
np
can
keep
best
item
properti
discard
remain
one
will
part
optim
solut
discard
can
done
time
time
instanc
given
observ
allow
us
now
prove
optim
greedi
strategi
take
largest
number
agre
noth
prove
let
us
assum
ia
io
two
case
either
ia
rank
first
case
let
posit
ia
clearli
let
rank
ident
posit
swap
claim
still
feasibl
larger
weight
claim
weight
follow
easili
strict
properti
let
us
now
reason
feasibl
let
properti
ia
ia
let
total
number
element
properti
top
posit
equival
note
swap
violat
constraint
correspond
sinc
ia
know
similarli
uk
uk
un
previou
observ
item
rank
posit
reason
fair
constraint
correspond
satisfi
element
properti
top-k
item
second
case
similar
one
can
reason
ia
includ
rank
chang
kth
posit
ia
obtain
rank
still
feasibl
larger
valu
henc
contradict
optim
thu
optim
rank
argument
one
can
show
instanc
feasibl
greedi
algorithm
will
never
fail
output
solut
report
infeas
let
us
now
discuss
briefli
run
greedi
algorithm
everi
properti
can
maintain
order
list
element
yet
pick
solut
count
item
properti
alreadi
part
solut
everi
rank
posit
just
need
look
first
element
everi
list
one
will
best
feasibl
item
counter
can
check
feasibl
time
can
also
updat
list
counter
per
rank
posit
reason
everi
rank
posit
handl
time
note
also
begin
list
can
construct
total
time
sinc
can
go
item
revers
order
place
everi
item
begin
suitabl
list
time
henc
total
run
time
approxim
algorithm
theorem
9.1
exist
linear
time
algorithm
given
instanc
constrain
rank
maxim
problem
satisfi
condit
output
rank
whose
weight
least
time
optim
one
satisfi
fair
constraint
factor
xx
xi
2uk
proof
algorithm
can
divid
two
phase
first
construct
partial
rank
may
leav
posit
empti
refin
yield
complet
rank
20
first
phase
find
close
optim
solut
follow
integ
program
max
xij
wij
xx
xij
uk
set
xij
xij
note
relax
problem
requir
everi
posit
rank
fill
proof
will
often
refer
pair
cell
sinc
treat
entri
dimension
array
consid
follow
greedi
algorithm
can
use
find
like
non-optim
integr
solut
problem
order
cell
accord
non-increas
valu
wij
set
zij
process
cell
one
one
ad
solut
caus
constraint
violat
set
zij
otherwis
move
next
cell
time
claim
solut
given
algorithm
valu
least
optim
solut
word
zij
wij
opt
opt
denot
optim
solut
prove
let
us
denot
i1
j1
i2
j2
jn
set
cell
pick
algorithm
order
ad
solut
let
also
sr
i1
j1
i2
j2
ir
jr
denot
optr
optim
solut
condit
cell
sr
part
solut
word
addit
constraint
xij
sr
claim
everi
hold
10
optr
optr
wir
jr
21
note
given
10
claim
follow
easili
inde
opt
opt0
opt0
opt1
wi1
j1
opt2
wi1
j1
wi2
j2
optn
ir
jr
wir
jr
last
equal
follow
fact
sn
maxim
solut
extend
henc
inde
optn
zij
wij
ir
jr
thu
remain
prove
10
take
consid
optim
solut
set
cell
contain
sr
thu
wij
optr
ir
jr
done
10
follow
straightforwardli
otherwis
consid
00
ir
jr
claim
set
cell
sr
00
feasibl
relax
problem
impli
10
sr
00
everi
cell
weight
wij
wir
jr
construct
pick
cell
lie
column
ir
jr
cell
lie
row
ir
jr
exist
add
make
sure
00
one
cell
everi
row
everi
column
now
consid
properti
fair
constraint
might
violat
00
necessarili
tir
moreov
laminar
matroid
structur
constraint
correspond
singl
properti
one
can
find
cell
sr
00
satisfi
fair
constraint
properti
thu
ad
one
cell
whenev
exist
everi
properti
tir
obtain
set
cell
00
feasibl
conclud
proof
algorithm
find
approxim
integ
program
let
us
now
show
construct
full
rank
let
zij
zij
will
construct
new
solut
support
one
everi
row
column
exactli
one
everi
column
satisfi
fair
constraint
note
defin
properti
claim
theorem
statement
inde
pm
everi
xx
xx
xij
zij
yij
xx
xij
uk
uk
22
xx
yij
approxim
guarante
follow
nonneg
contribut
total
weight
guarante
respect
relax
problem
whose
optim
valu
upperbound
optim
valu
rank
maxim
problem
henc
remain
find
properti
can
construct
use
anoth
greedi
procedur
let
process
element
one
time
increas
order
consid
given
pick
ad
solut
introduc
fair
constraint
violat
clear
algorithm
succe
find
suitabl
everi
step
succe
construct
solut
requir
properti
remain
show
inde
case
end
fix
look
step
consid
condit
know
least
element
can
place
posit
without
violat
constraint
element
may
alreadi
taken
algorithm
ad
new
solut
howev
begin
least
one
remain
can
select
conclud
proof
correct
procedur
remain
observ
phase
algorithm
simpl
preprocess
can
implement
linear
time
10
hard
result
section
state
prove
hard
result
regard
constrain
rank
feasibl
maxim
problem
variant
sinc
proof
involv
hypergraph
match
problem
let
us
defin
concept
formal
hypergraph
pair
compos
vertex
set
hyperedg
set
given
call
hypergraph
everi
hyperedg
cardin
hypergraph
match
follow
decis
problem
given
hypergraph
number
decid
whether
exist
set
pairwis
disjoint
hyperedg
set
call
match
optim
variant
problem
ask
largest
cardin
match
name
intend
suggest
recal
context
constrain
rank
feasibl
maxim
problem
paramet
maximum
number
properti
given
item
first
hard
result
state
even
small
constrain
rank
feasibl
hard
theorem
10.1
constrain
rank
feasibl
problem
np-hard
proof
present
reduct
hypergraph
match
known
np-hard
let
hypergraph
let
number
want
test
whether
match
size
construct
instanc
constrain
rank
problem
whose
feasibl
equival
match
cardin
follow
let
number
hyperedg
index
e1
e2
em
let
number
vertic
index
v1
v2
vp
set
number
item
rank
problem
ith
item
correspond
edg
ei
set
number
posit
rank
everi
vertex
introduc
properti
follow
ei
thu
properti
note
hyperedg
ei
contain
vertic
ti
item
desir
everi
let
uk
23
remain
argu
match
cardin
instanc
constrain
rank
problem
feasibl
match
cardin
let
ei
defin
rank
take
element
order
sinc
match
everi
vertex
belong
one
hyperedg
thu
everi
properti
henc
fair
constraint
satisfi
similarli
reason
opposit
direct
feasibl
rank
yield
match
cardin
follow
let
set
hyperedg
correspond
item
rank
one
possibl
feasibl
problem
make
hard
howev
case
next
theorem
say
even
guarante
feasibl
via
assumpt
problem
remain
hard
approxim
theorem
10.2
feasibl
constrain
rank
maxim
problem
satisfi
condit
weight
satisfi
properti
np-hard
approxim
within
factor
log
proof
proof
will
use
fact
maximum
hypergraph
match
problem
hard
approxim
within
factor
log
hss03
present
approximation-preserv
reduct
maximum
hypergraph
match
problem
proof
similar
theorem
10.1
howev
must
now
ensur
result
instanc
feasibl
satisfi
condit
hypergraph
vertic
v1
v2
vp
hyperedg
e1
e2
em
construct
instanc
constrain
rank
maxim
problem
follow
let
m0
2m
number
item
let
number
posit
rank
item
correspond
edg
e1
e2
em
remain
item
2m
call
improp
item
proof
theorem
10.1
everi
vertex
defin
properti
ei
fair
constraint
defin
upper-bound
uk
improp
item
belong
properti
henc
condit
satisfi
furthermor
can
never
caus
fair
constraint
violat
lastli
let
wij
2m
note
matrix
satisfi
properti
everi
match
cardin
correspond
feasibl
rank
total
weight
instanc
rank
maxim
simpli
take
item
correspond
edg
match
add
improp
item
similarli
everi
rank
weight
can
transform
match
size
reduct
approxim
preserv
conclud
constrain
rank
maxim
problem
np-hard
approxim
within
factor
better
log
next
result
say
constrain
rank
feasibl
hard
even
fix
structur
set
properti
input
problem
upper-bound
constraint
theorem
10.3
exist
fix
famili
properti
pm
pm
pm
m2
problem
given
matrix
upper-bound
valu
nn
pm
check
whether
constrain
rank
instanc
defin
pm
feasibl
np-hard
proof
let
famili
properti
pm
element
subset
pm
i1
i2
i1
i2
i1
i2
24
reduc
independ
set
problem
problem
constrain
rank
maxim
fix
properti
set
consid
instanc
independ
set
problem
graph
underli
question
independ
set
size
construct
correspond
instanc
constrain
rank
maxim
follow
number
rank
posit
item
rank
one
everi
vertex
thu
properti
pair
vertic
everi
edg
i1
i2
set
fair
constraint
restrict
number
item
properti
top-n
posit
un
word
one
item
i1
i2
can
appear
rank
non-edg
leav
upper-bound
constraint
correspond
properti
unspecifi
equival
let
uk
i1
i2
clearli
feasibl
rank
one-to-on
correspond
independ
set
size
inde
place
item
vertic
independ
set
size
rank
order
result
rank
feasibl
essenti
constraint
impos
rank
everi
edg
i1
i2
one
i1
i2
present
rank
convers
constraint
satisfi
set
item
place
rank
form
independ
set
size
independ
set
problem
np-hard
via
reduct
obtain
hard
constrain
rank
maxim
problem
fix
properti
lastli
one
hope
still
possibl
solv
constrain
rank
maxim
problem
allow
constraint
violat
small
amount
howev
also
remain
hard
result
state
find
solut
violat
constraint
factor
constant
np-hard
interestingli
proof
reli
certain
bound
ramsey
theori
theorem
10.4
everi
constant
follow
violat
gap
variant
constrain
rank
feasibl
problem
np-hard
output
ye
input
instanc
satisfi
output
solut
violat
everi
upper-bound
constraint
time
proof
reduct
inspir
idea
develop
approxim
hard
pack
integ
program
ck05
use
inapproximab
independ
set
has96
zuc07
prove
theorem
state
approxim
cardin
maximum
independ
set
undirect
graph
within
factor
np-hard
everi
constant
fix
constant
without
loss
gener
assum
consid
follow
reduct
given
instanc
independ
set
problem
graph
number
goal
check
whether
independ
set
size
let
set
item
number
posit
rank
everi
cliqu
cardin
add
new
properti
set
upper-bound
number
element
top-n
posit
rank
un
note
mc
poli
constraint
claim
follow
rank
violat
constraint
factor
independ
set
cardin
feasibl
rank
independ
set
cardin
25
note
prove
suffic
obtain
desir
result
procedur
solv
constrain
rank
feasibl
problem
one
approxim
polynomi
time
cardin
maximum
independ
set
graph
approxim
ratio
possibl
unless
has96
zuc07
henc
remain
establish
claim
establish
second
claim
note
everi
independ
set
size
give
feasibl
solut
constrain
rank
instanc
place
item
correspond
rank
order
establish
first
claim
suppos
solut
violat
everi
constraint
factor
mean
subset
contain
vertic
contain
cliqu
use
standard
upper-bound
ramsey
number
follow
subgraph
induc
exist
independ
set
cardin
n1
11
discuss
futur
work
paper
motiv
control
allevi
algorithm
bia
inform
retriev
initi
studi
complex
natur
constrain
optim
problem
concern
rank
result
indic
constrain
rank
maxim
problem
gener
classic
bipartit
match
problem
show
fine-grain
complex
structur
constraint
number
appear
upper-bound
play
role
determin
complex
moreov
problem
gener
sever
hypergraph
match
pack
problem
algorithm
result
bypass
obstacl
implicit
past
theori
work
leverag
structur
properti
constraint
common
object
function
inform
retriev
gener
result
contribut
grow
set
algorithm
counter
algorithm
bia
fundament
problem
dhp
12
bs15
zvgrg15
cdkv16
ck
18
cdk
17
kir16
cv17
structur
insight
obtain
may
find
use
algorithm
set
relat
rather
broad
scope
rank
problem
work
also
suggest
open
problem
direct
first
question
concern
time
can
case
lu
variant
theorem
3.2
impli
can
solv
improv
nearly-linear
time
variant
theorem
3.3
anoth
question
complex
constrain
rank
maxim
problem
differ
variant
variou
constant
appear
approxim
algorithm
unlik
optim
improv
remain
import
particular
approxim
algorithm
case
larg
theorem
3.4
may
incur
multipl
violat
constraint
signific
deal
instanc
upper
bound
constraint
rather
larg
uk
k2
case
violat
effect
eras
constraint
interest
open
problem
understand
whether
violat
can
avoid
either
provid
differ
algorithm
make
differ
assumpt
instanc
work
consid
linear
object
function
rank
optim
problem
object
independ
sum
profit
individu
item
placement
model
might
appropri
certain
set
may
case
one
prefer
measur
qualiti
rank
whole
particular
util
place
given
item
kth
posit
also
depend
item
place
zcl03
thu
defin
studi
suitabl
variant
problem
class
object
rank
satisfi
version
diminish
return
principl
submodular
practic
interest
relat
question
deserv
independ
explor
studi
complex
sampl
constrain
rank
probabl
distribut
induc
object
rather
26
output
rank
maxim
valu
output
rank
probabl
proport
valu
final
extend
result
onlin
set
seem
like
import
technic
challeng
also
like
practic
consequ
acknowledg
like
thank
mohit
singh
rico
zenklusen
valuabl
discuss
problem
refer
afk96
sanjeev
arora
alan
friez
haim
kaplan
new
round
procedur
assign
problem
applic
dens
graph
arrang
problem
37th
annual
symposium
foundat
comput
scienc
foc
96
burlington
vermont
usa
14
16
octob
1996
page
21
30
1996
amo93
ravindra
ahuja
thoma
magnanti
jame
orlin
network
flow
theori
algorithm
applic
prentice-hal
inc
upper
saddl
river
nj
usa
1993
bae16
drake
baer
filter
bubbl
explain
trump
won
didn
see
come
novemb
2016
ny
mag
bcz
16
tolga
bolukbasi
kai-wei
chang
jame
zou
venkatesh
saligrama
adam
kalai
man
comput
programm
woman
homemak
debias
word
embed
advanc
neural
inform
process
system
page
4349
4357
2016
bma15
eytan
bakshi
solomon
mess
lada
adam
exposur
ideolog
divers
news
opinion
facebook
scienc
348
6239
1130
1132
2015
bs15
baroca
selbst
big
data
dispar
impact
ssrn
elibrari
2015
bt52
ralph
allan
bradley
milton
terri
rank
analysi
incomplet
block
design
method
pair
comparison
biometrika
39
324
345
1952
cdk
17
elisa
celi
amit
deshpand
tarun
kathuria
damian
straszak
nisheeth
vishnoi
complex
constrain
determinant
point
process
approx
random
2017
page
36
36
22
2017
cdkv16
elisa
celi
amit
deshpand
tarun
kathuria
nisheeth
vishnoi
fair
divers
fair
account
transpar
machin
learn
2016
cg98
jaim
carbonel
jade
goldstein
use
mmr
diversity-bas
rerank
reorder
document
produc
summari
proceed
21st
annual
intern
acm
sigir
confer
research
develop
inform
retriev
page
335
336
acm
1998
chrg16
matthew
costello
jame
hawdon
thoma
ratliff
tyler
grantham
view
onlin
extrem
individu
attribut
lead
exposur
comput
human
behavior
63
311
320
2016
27
chv57
elisa
celi
lingxiao
huang
nisheeth
vishnoi
multiwinn
vote
fair
constraint
ijcai-ecai
2018
arxiv
1710.10057
ck05
chandra
chekuri
sanjeev
khanna
polynomi
time
approxim
scheme
multipl
knapsack
problem
siam
comput
35
713
728
2005
ckc
08
charl
la
clark
maheedhar
kolla
gordon
cormack
olga
vechtomova
azin
ashkan
stefan
bu
ttcher
ian
mackinnon
novelti
divers
inform
retriev
evalu
proceed
31st
annual
intern
acm
sigir
confer
research
develop
inform
retriev
page
659
666
acm
2008
ckk16
elisa
celi
peter
krafft
nathan
kobe
sequenti
vote
promot
collect
discoveri
social
recommend
system
proceed
tenth
intern
confer
web
social
media
cologn
germani
may
17
20
2016
page
42
51
2016
ck
18
elisa
celi
vijay
keswani
damian
straszak
amit
deshpand
tarun
kathuria
nisheeth
vishnoi
fair
divers
dpp-base
data
summar
corr
ab
1802.04023
2018
ct17
elisa
celi
siddartha
tekriw
user
want
site
qualiti
divers
intern
confer
comput
social
scienc
ic2s2
2017
cv17
elisa
celi
nisheeth
vishnoi
fair
person
fair
account
transpar
machin
learn
2017
dhp
12
cynthia
dwork
moritz
hardt
toniann
pitassi
omer
reingold
richard
zemel
fair
awar
itc
new
york
ny
usa
2012
acm
dkns01
cynthia
dwork
ravi
kumar
moni
naor
dandapani
sivakumar
rank
aggreg
method
web
proceed
10th
intern
confer
world
wide
web
page
613
622
acm
2001
er15
robert
epstein
ronald
robertson
search
engin
manipul
effect
seme
possibl
impact
outcom
elect
proceed
nation
academi
scienc
112
33
e4512
e4521
2015
fj12
uriel
feig
shlomo
jozeph
univers
factor
graph
automata
languag
program
39th
intern
colloquium
icalp
2012
warwick
uk
juli
13
2012
proceed
part
page
339
350
2012
fkm
06
ronald
fagin
ravi
kumar
mohammad
mahdian
sivakumar
erik
vee
compar
partial
rank
siam
journal
discret
mathemat
20
628
648
2006
fks03
ronald
fagin
ravi
kumar
dakshinamurthi
sivakumar
compar
top
list
siam
journal
discret
mathemat
17
134
160
2003
grsz14
fabrizio
grandoni
ravi
mohit
singh
rico
zenklusen
new
approach
multi-object
optim
mathemat
program
146
525
554
2014
28
gs09
sreeniva
gollapudi
aneesh
sharma
axiomat
approach
result
diversif
proceed
18th
intern
confer
world
wide
web
page
381
390
acm
2009
has96
hastad
cliqu
hard
approxim
within
n1
proceed
37th
annual
symposium
foundat
comput
scienc
foc
96
ieee
comput
societi
1996
hss03
elad
hazan
shmuel
safra
ode
schwartz
complex
approxim
k-dimension
match
approx-random
03
page
83
97
springer
2003
jen76
jenkyn
efficaci
greedi
algorithm
proc
7th
s-e
conf
combinator
graph
theori
comput
page
341
350
1976
jk02
kalervo
ja
rvelin
jaana
keka
la
inen
cumul
gain-bas
evalu
ir
techniqu
acm
transact
inform
system
toi
20
422
446
2002
kir16
keith
kirkpatrick
battl
algorithm
bia
ensur
algorithm
treat
us
fairli
commun
acm
59
10
16
17
2016
kmm15
matthew
kay
cynthia
matuszek
sean
munson
unequ
represent
gender
stereotyp
imag
search
result
occup
proceed
33rd
annual
acm
confer
human
factor
comput
system
page
3819
3828
acm
2015
kmr17
jon
kleinberg
sendhil
mullainathan
manish
raghavan
inher
trade-off
fair
determin
risk
score
innov
theoret
comput
scienc
2017
kv10
ravi
kumar
sergei
vassilvitskii
gener
distanc
rank
proceed
19th
intern
confer
world
wide
web
page
571
580
acm
2010
mes06
julia
mestr
greedi
approxim
algorithm
algorithm
esa
2006
14th
annual
european
symposium
zurich
switzerland
septemb
11
13
2006
proceed
page
528
539
2006
mk60
melvin
earl
maron
john
kuhn
relev
probabilist
index
inform
retriev
journal
acm
jacm
216
244
1960
mon95
burt
monro
fulli
proport
represent
american
polit
scienc
review
89
925
940
1995
mr
08
christoph
man
prabhakar
raghavan
hinrich
schu
tze
et
al
introduct
inform
retriev
cambridg
univers
press
cambridg
2008
pdsat12
debmalya
panigrahi
atish
da
sarma
gagan
aggarw
andrew
tomkin
onlin
select
divers
result
proceed
fifth
acm
intern
confer
web
search
data
mine
page
263
272
acm
2012
rbcj09
filip
radlinski
paul
bennett
ben
carterett
thorsten
joachim
redund
divers
interdepend
document
relev
acm
sigir
forum
volum
43
page
46
52
acm
2009
29
rkj08
filip
radlinski
robert
kleinberg
thorsten
joachim
learn
divers
rank
multi-arm
bandit
proceed
25th
intern
confer
machin
learn
page
784
791
acm
2008
rob77
stephen
robertson
probabl
rank
principl
ir
journal
document
33
294
304
1977
sb88
gerard
salton
christoph
buckley
term-weight
approach
automat
text
retriev
inform
process
manag
24
513
523
1988
spe04
charl
spearman
proof
measur
associ
two
thing
american
journal
psycholog
15
72
101
1904
spe06
charl
spearman
footrul
measur
correl
british
journal
psycholog
1904
1920
89
108
1906
srg13
aleksandr
slivkin
filip
radlinski
sreeniva
gollapudi
rank
bandit
metric
space
learn
divers
rank
larg
document
collect
journal
machin
learn
research
14
feb
399
436
2013
sri95
aravind
srinivasan
improv
approxim
pack
cover
problem
proceed
twenty-seventh
annual
acm
symposium
theori
comput
29
may-1
june
1995
la
vega
nevada
usa
page
268
276
1995
ys17
ke
yang
julia
stoyanovich
measur
fair
rank
output
proceed
29th
intern
confer
scientif
statist
databas
manag
chicago
il
usa
june
27
29
2017
page
22
22
2017
zcl03
cheng
xiang
zhai
william
cohen
john
lafferti
beyond
independ
relev
method
evalu
metric
subtop
retriev
proceed
26th
annual
intern
acm
sigir
confer
research
develop
informaion
retriev
page
10
17
acm
2003
zh08
mi
zhang
neil
hurley
avoid
monotoni
improv
divers
recommend
list
proceed
2008
acm
confer
recommend
system
page
123
130
acm
2008
zmkl05
cai-nicola
ziegler
sean
mcnee
joseph
konstan
georg
lausen
improv
recommend
list
topic
diversif
proceed
14th
intern
confer
world
wide
web
page
22
32
acm
2005
zuc07
david
zuckerman
linear
degre
extractor
inapproxim
max
cliqu
chromat
number
theori
comput
103
128
2007
zvgrg15
muhammad
bilal
zafar
isabel
valera
manuel
gomez
rodriguez
krishna
gummadi
fair
constraint
mechan
fair
classif
fair
account
transpar
machin
learn
2015
zw
13
rich
zemel
yu
wu
kevin
swerski
toni
pitassi
cynthia
dwork
learn
fair
represent
proceed
30th
intern
confer
machin
learn
page
325
333
2013
30
valu
wij
common
rank
metric
inform
retriev
propos
new
rank
method
natur
import
evalu
qualiti
result
output
toward
varieti
rank
metric
develop
ideal
one
use
metric
compar
good
constrain
rank
respect
qualiti
comparison
unconstrain
rank
put
anoth
way
like
maxim
qualiti
constrain
rank
measur
metric
section
briefli
survey
three
import
class
rank
metric
translat
set
show
problem
formul
can
captur
metric
defin
valu
wij
appropri
metric
often
defin
respect
item
qualiti
often
refer
relev
ir
literatur
without
loss
gener
relabel
item
a1
a2
denot
qualiti
eas
present
introduc
simpl
form
metric
often
practic
normal
better
comparison
across
rank
two
equival
respect
optim
consid
integr
rank
ωm
everi
everi
11
xij
xij
rank-1
metric
qualiti
rank
consid
sum
qualiti
item
qualiti
item
posit
discount
valu
non-increas
word
get
order
correct
top
list
import
get
correct
bottom
formal
given
rank
ωm
rank-1
metric
defin
mr1
ai
xij
non-increas
function
common
exampl
discount
cumul
gain
dcg
jk02
log
variant
rank-1
metric
can
simpli
defin
wij
ai
let
us
now
show
properti
hold
metric
select
two
i1
i2
j1
j2
definit
ai1
ai2
j1
j2
henc
wi1
j1
wi2
j1
wi1
j1
wi1
j2
impli
wi1
j1
wi2
j2
wi1
j2
wi2
j1
ai1
j1
ai2
j2
ai1
j2
ai2
j1
ai1
ai2
j1
j2
properti
hold
bradley-terri
metric
varieti
multipl
rank
metric
origin
develop
goal
sampl
distribut
complet
rank
ωm
exampl
bradley-terri
model
ai1
bt52
quantiti
ai
denot
probabl
item
i1
rank
item
i2
i2
ai1
give
rise
metric
mbt
ai
ai
remov
denomin
i1
i2
xi1
j1
xi2
j2
j1
j2
31
everi
pair
item
appear
exactli
easi
see
metric
can
rewritten
mbt
ai
xij
henc
equival
maxim
log
mbt
nj
xij
log
ai
let
a0i
log
ai
rank-1
metric
non-increas
a0i
henc
fit
formul
discuss
align
metric
one
can
also
consid
metric
depend
differ
item
posit
two
rank
let
ωm
optim
unconstrain
rank
correspond
sort
non-increas
order
ai
align
metric
defin
respect
posit
item
give
exampl
given
rank
ωm
set
spearman
footrul
spe06
correspond
mf
2m
xij
ij
similarli
spearman
rho
spe04
correspond
mρ
2m
xij
ij
vari
slightli
usual
definit
partial
rather
complet
rank
measur
similar
rather
differ
former
line
partial
rank
version
spearman
footrul
spearman
rho
fks03
fkm
06
latter
add
valu
maintain
non-neg
monoton
metric
can
natur
captur
formul
let
wij
2m
wij
2m
respect
ij
two
i1
i2
j1
j2
clear
wi1
j1
wi2
j1
wi1
j1
wi1
j2
desir
furthermor
difficult
show
via
simpl
tediou
case
analysi
possibl
order
j1
j2
j1
j2
desir
properti
wi1
j1
wi2
j2
wi1
j2
wi2
j1
hold
one
can
also
think
weight
version
metric
introduc
kv10
observ
gener
32