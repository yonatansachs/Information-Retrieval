ranking
with
fairness
constraints
elisa
celis
damian
straszak
and
nisheeth
vishnoi
arxiv
1704
06840v4
cs
ds
30
jul
2018
cole
polytechnique
fe
de
rale
de
lausanne
epfl
switzerland
abstract
ranking
algorithms
are
deployed
widely
to
order
set
of
items
in
applications
such
as
search
engines
news
feeds
and
recommendation
systems
recent
studies
however
have
shown
that
left
unchecked
the
output
of
ranking
algorithms
can
result
in
decreased
diversity
in
the
type
of
content
presented
promote
stereotypes
and
polarize
opinions
in
order
to
address
such
issues
we
study
the
following
variant
of
the
traditional
ranking
problem
when
in
addition
there
are
fairness
or
diversity
constraints
given
collection
of
items
along
with
the
value
of
placing
an
item
in
particular
position
in
the
ranking
the
collection
of
sensitive
attributes
such
as
gender
race
political
opinion
of
each
item
and
collection
of
fairness
constraints
that
for
each
bound
the
number
of
items
with
each
attribute
that
are
allowed
to
appear
in
the
top
positions
of
the
ranking
the
goal
is
to
output
ranking
that
maximizes
the
value
with
respect
to
the
original
rank
quality
metric
while
respecting
the
constraints
this
problem
encapsulates
various
well-studied
problems
related
to
bipartite
and
hypergraph
matching
as
special
cases
and
turns
out
to
be
hard
to
approximate
even
with
simple
constraints
our
main
technical
contributions
are
fast
exact
and
approximation
algorithms
along
with
complementary
hardness
results
that
together
come
close
to
settling
the
approximability
of
this
constrained
ranking
maximization
problem
unlike
prior
work
on
the
approximability
of
constrained
matching
problems
our
algorithm
runs
in
linear
time
even
when
the
number
of
constraints
is
polynomially
large
its
approximation
ratio
does
not
depend
on
the
number
of
constraints
and
it
produces
solutions
with
small
constraint
violations
our
results
rely
on
insights
about
the
constrained
matching
problem
when
the
objective
function
satisfies
certain
properties
that
appear
in
common
ranking
metrics
such
as
discounted
cumulative
gain
dcg
spearman
rho
or
bradley-terry
along
with
the
nested
structure
of
fairness
constraints
contents
introduction
our
model
our
results
other
related
work
proof
overviews
polynomial
time
algorithm
for
12
dynamic
programming-based
exact
algorithm
15
7.1
geometric
interpretation
of
fairness
constraints
15
7.2
the
dynamic
programming
algorithm
15
algorithms
for
and
upper-bound
constraints
17
8.1
integrality
of
lp
solutions
17
8.2
fast
greedy
algorithm
19
approximation
algorithm
20
10
hardness
results
23
11
discussion
and
future
work
26
values
wij
and
common
ranking
metrics
rank-1
metrics
bradley-terry
metrics
alignment
metrics
31
31
31
32
introduction
selecting
and
ranking
subset
of
data
is
fundamental
problem
in
information
retrieval
and
at
the
core
of
ubiquitous
applications
including
ordering
search
results
such
google
personalized
social
media
feeds
facebook
twitter
or
instagram
ecommerce
websites
amazon
or
ebay
and
online
media
sites
netflix
or
youtube
the
basic
algorithmic
problem
that
arises
is
as
follows
there
are
items
webpages
images
or
documents
and
the
goal
is
to
output
list
of
items
in
the
order
that
is
most
valuable
to
given
user
or
company
for
each
item
and
position
one
is
given
number
wij
that
captures
the
value
that
item
contributes
to
the
ranking
if
placed
at
position
these
values
can
be
tailored
to
particular
query
or
user
and
significant
effort
has
gone
into
developing
models
and
mechanisms
to
learn
these
parameters
mrs
08
in
practice
there
are
many
ways
one
could
arrive
at
wij
each
of
which
results
in
slightly
different
metric
for
the
value
of
ranking
prevalent
examples
include
versions
of
discounted
cumulative
gain
dcg
jk02
bradley-terry
bt52
and
spearman
rho
spe04
note
that
for
many
of
these
metrics
one
does
not
necessarily
need
nm
parameters
to
specify
and
typically
degrees
of
freedom
is
enough
just
specifying
the
quality
of
each
item
still
we
choose
to
work
with
this
general
setting
and
only
abstract
out
the
most
important
properties
such
weight
matrix
satisfies
generally
for
such
metrics
wij
is
non-increasing
in
both
and
and
if
we
interpret
i1
i2
to
mean
that
i1
has
better
quality
than
i2
then
the
value
of
the
ranking
can
only
increase
by
placing
i1
above
i2
in
the
ranking
formally
such
values
satisfy
the
following
property
known
as
monotonicity
and
the
monge
condition
wi1
j1
wi2
j1
and
wi1
j1
wi1
j2
and
wi1
j1
wi2
j2
wi1
j2
wj1
i2
for
all
i1
i2
and
j1
j2
see
appendix
the
ranking
maximization
problem
is
to
find
an
assignment
of
the
items
to
each
of
the
positions
such
that
the
total
value
obtained
is
maximized
in
this
form
the
problem
is
equivalent
to
finding
the
maximum
weight
matching
in
complete
bipartite
graph
and
has
well
known
solution
the
hungarian
algorithm
however
recent
studies
have
shown
that
producing
rankings
in
this
manner
can
result
in
one
type
of
content
being
overrepresented
at
the
expense
of
another
this
is
form
of
algorithmic
bias
and
can
lead
to
grave
societal
consequences
from
search
results
that
inadvertently
promote
stereotypes
by
over
under-representing
sensitive
attributes
such
as
race
and
gender
kmm15
bcz
16
to
news
feeds
that
can
promote
extremist
ideology
chrg16
and
possibly
even
influence
the
results
of
elections
bae16
bma15
for
example
er15
demonstrated
that
by
varying
the
ranking
of
set
of
news
articles
the
voting
preferences
of
undecided
voters
can
be
manipulated
towards
ensuring
that
no
type
of
content
is
overrepresented
in
the
context
of
the
ranking
problem
as
defined
above
we
introduce
the
constrained
ranking
maximization
problem
that
restricts
allowable
rankings
to
those
in
which
no
type
of
content
dominates
to
ensure
the
rankings
are
fair
since
fairness
and
bias
could
mean
different
things
in
different
contexts
rather
than
fixing
one
specific
notion
of
fairness
we
allow
the
user
to
specify
set
of
fairness
constraints
in
other
words
we
take
the
constraints
as
input
as
motivating
example
consider
the
setting
in
which
the
set
of
items
consists
of
images
of
computer
scientists
each
image
is
associated
with
several
possibly
non-disjoint
sensitive
attributes
or
properties
such
as
gender
ethnicity
and
age
and
subset
of
size
needs
to
be
selected
and
ranked
the
user
can
specify
an
upper-bound
uk
on
the
number
of
items
with
property
that
are
allowed
to
appear
in
the
top
positions
of
the
ranking
and
similarly
lower-bound
lk
formally
let
be
set
of
properties
and
let
be
the
set
of
items
that
have
the
property
note
that
these
sets
need
not
be
disjoint
let
be
an
binary
assignment
matrix
whose
j-th
column
contains
one
in
the
i-th
position
if
item
is
assigned
to
position
each
position
must
be
assigned
to
exactly
one
item
and
each
item
can
be
assigned
to
at
most
one
position
we
say
that
satisfies
the
fairness
constraints
if
for
all
and
we
have
xij
uk
lk
if
we
let
be
the
family
of
all
assignment
matrices
that
satisfy
the
fairness
constraints
the
constrained
ranking
optimization
problem
is
given
the
sets
of
items
with
each
property
p1
pp
the
fairness
constraints
lk
uk
and
the
values
wij
find
wij
xij
arg
max
this
problem
is
equivalent
to
finding
maximum
weight
matching
of
size
that
satisfies
the
given
fairness
constraints
in
weighted
complete
bipartite
graph
and
now
becomes
non-trivial
its
complexity
is
the
central
object
of
study
in
this
paper
beyond
the
fairness
and
ethical
considerations
traditional
diversification
concerns
in
information
retrieval
such
as
query
ambiguity
does
jaguar
refer
to
the
car
or
the
animal
or
user
context
does
the
user
want
to
see
webpages
news
articles
academic
papers
or
images
can
also
be
cast
in
this
framework
towards
this
rich
literature
on
diversifying
rankings
has
emerged
in
information
retrieval
on
high-level
several
approaches
redefine
the
objective
function
to
incorporate
notion
of
diversity
and
leave
the
ranking
maximization
problem
unconstrained
common
approach
is
to
re-weight
the
wij
to
attempt
to
capture
the
amount
of
diversity
item
would
introduce
at
position
conditioned
on
the
items
that
were
placed
at
positions
see
cg98
zh08
ckc
08
zcl03
zmkl05
or
casting
it
directly
as
an
unconstrained
multiobjective
optimization
problem
ys17
alternate
approaches
mix
together
or
aggregate
different
rankings
as
generated
by
different
interpretations
of
query
rbcj09
dkns01
diversity
has
also
been
found
to
be
desirable
by
users
ct17
and
has
been
observed
to
arise
inherently
when
the
ranking
is
determined
by
user
upvotes
ckk16
despite
these
efforts
and
the
fact
that
all
major
search
engines
now
diversify
their
results
highly
uniform
content
is
often
still
displayed
certain
image
searches
can
display
results
that
have
almost
entirely
the
same
attributes
kmm15
further
gs09
showed
that
no
single
diversification
function
can
satisfy
set
of
natural
axioms
that
one
would
want
any
fair
ranking
to
have
in
essence
there
is
tension
between
relevance
and
fairness
if
the
wij
for
items
that
have
given
property
are
much
higher
than
the
rest
the
above
approaches
cannot
correct
for
overrepresentation
hence
the
reason
to
cast
the
problem
as
constrained
optimization
problem
the
objective
is
still
determined
by
the
values
but
the
solution
space
is
restricted
by
fairness
constraints
theoretically
the
fairness
constraints
come
with
computational
price
the
constrained
ranking
maximization
problem
can
be
seen
to
generalize
various
np-hard
problems
such
as
independent
set
hypergraph
matching
and
set
packing
unlike
the
unconstrained
case
even
checking
if
there
is
complete
feasible
ranking
is
np-hard
as
consequence
in
general
we
cannot
hope
to
produce
solution
that
does
not
violate
any
constraints
some
variants
and
generalizations
of
our
problem
have
been
studied
in
the
tcs
and
optimization
literature
here
we
mention
the
three
most
relevant
note
that
some
may
leave
empty
positions
in
the
ranking
as
opposed
to
selecting
elements
to
rank
as
we
desire
afk96
considered
the
bipartite
perfect
matching
problem
with
poly
constraints
they
present
polynomial
time
randomized
algorithm
that
finds
near
perfect
matching
which
violates
each
constraint
additively
by
at
most
grsz14
improved
the
above
result
to
approximation
algorithm
however
the
running
time
of
their
algorithm
2.5
is
roughly
mk
where
is
the
number
of
hard
constraints
and
the
output
is
matching
sri95
studied
the
approximability
of
the
packing
integer
program
problem
which
when
applied
to
our
setting
and
gives
an
approximation
algorithm
in
the
constrained
ranking
maximization
problem
presented
above
all
of
these
results
seem
inadequate
the
number
of
fairness
constraints
is
2np
which
would
make
the
running
time
of
grsz14
too
large
and
an
additive
violation
of
would
render
the
upper-bound
constraints
impotent
the
main
technical
contributions
of
this
paper
are
fast
exact
and
approximation
algorithms
for
this
constrained
ranking
maximization
problem
along
with
complementary
hardness
results
which
together
give
solid
understanding
of
the
computational
complexity
of
this
problem
to
overcome
the
limitations
of
the
past
work
on
constrained
matching
problems
our
results
often
make
use
of
two
structural
properties
of
such
formulation
the
set
of
constraints
can
be
broken
into
groups
for
each
property
we
have
nested
upper-bound
constraints
one
for
each
and
the
objective
function
satisfies
the
property
stated
in
using
properties
and
we
obtain
efficient
polynomial
or
even
linear
time
algorithms
for
this
problem
in
various
interesting
regimes
both
these
properties
are
natural
in
the
information
retrieval
setting
and
could
be
useful
in
other
algorithmic
contexts
involving
rankings
our
model
we
study
the
following
constrained
ranking
maximization
problem
wij
xij
lk
xij
uk
arg
max
rm
where
rm
is
the
set
of
all
matrices
which
represent
ranking
items
into
positions
recall
that
wij
represents
the
profit
of
placing
item
at
position
and
for
every
property
and
every
position
in
the
ranking
lk
and
uk
are
the
lower
and
upper
bound
on
the
number
of
items
having
property
that
are
allowed
to
be
in
the
top
positions
in
the
ranking
for
an
example
we
refer
to
figure
we
distinguish
two
important
special
cases
of
the
problem
when
only
the
upper-bound
constraints
are
present
and
when
only
the
lower-bound
constraints
are
present
these
variants
are
referred
to
as
the
constrained
ranking
maximization
problem
and
the
constrained
ranking
maximization
problem
respectively
and
to
avoid
confusion
we
sometimes
add
lu
when
talking
about
the
general
problem
with
both
types
of
constraints
present
furthermore
most
our
results
hold
under
the
assumption
that
the
weight
function
is
monotone
and
satisfies
the
monge
property
whenever
these
assumptions
are
not
necessary
we
emphasize
this
fact
by
saying
that
general
weights
are
allowed
our
results
in
this
section
we
present
an
overview
of
our
results
the
statements
of
theorems
here
are
informal
for
the
ease
of
readability
formal
statements
are
deferred
to
later
part
let
the
type
ti
of
item
be
the
set
of
properties
that
the
item
has
our
first
result
is
an
exact
algorithm
for
solving
the
constrained
ranking
maximization
problem
whose
running
time
is
polynomial
if
the
number
of
distinct
ti
denoted
by
is
constant
see
theorem
7.1
an
example
of
value
matrix
the
values
corre
the
optimal
uncon
the
optimal
con
sponding
to
the
optimal
unconstrained
ranking
in
and
the
optimal
constrained
ranking
in
are
depicted
by
gray
and
orange
respectively
note
that
for
clarity
of
the
rank
order
the
above
is
the
transpose
of
the
matrix
referred
to
as
in
the
text
strained
ranking
the
upper-bound
constraint
at
position
is
violated
as
there
are
men
but
only
are
allowed
strained
ranking
the
upper-bound
constraint
at
position
is
no
longer
violated
in
fact
all
constraints
are
satisfied
figure
simple
example
of
our
framework
in
matrix
of
wij
is
presented
here
the
options
are
people
who
are
either
male
blue
or
female
yellow
and
of
them
must
be
ranked
we
assume
that
there
is
single
upper-bound
constraint
for
each
position
in
the
ranking
which
is
applied
to
both
genders
as
depicted
in
figures
and
the
constraints
are
satisfied
in
the
latter
but
not
the
former
the
weights
of
these
two
rankings
are
depicted
in
figure
theorem
3.1
exact
dynamic
programming-based
algorithm
there
is
an
algorithm
that
solves
the
constrained
ranking
maximization
problem
lu
in
pqnq
pm
time
when
the
values
satisfy
property
this
algorithm
combines
geometric
interpretation
of
our
problem
along
with
dynamic
programming
and
proceeds
by
solving
sequence
of
dimensional
sub-problems
the
proof
of
theorem
3.1
is
provided
in
section
when
is
allowed
to
be
large
the
problem
is
np-hard
see
theorem
3.5
generally
we
may
not
be
able
to
assume
that
is
constant
and
even
then
it
would
be
desirable
to
have
algorithms
whose
running
time
is
close
to
the
size
of
the
input
towards
this
we
consider
natural
parameter
of
the
set
of
properties
the
size
of
the
largest
ti
namely
max
ti
the
complexity
of
the
constrained
ranking
maximization
problem
turns
out
to
show
interesting
behavior
with
respect
to
note
that
and
typically
the
case
when
corresponds
to
the
simplest
practical
setting
where
there
are
disjoint
properties
the
properties
partition
the
set
of
items
for
instance
set
of
images
of
humans
could
be
partitioned
based
on
the
ethnicity
or
age
of
the
individual
note
that
even
though
for
this
could
still
be
large
and
the
previous
theorem
may
have
prohibitively
large
running
time
when
we
prove
that
the
constrained
ranking
maximization
problem
lu
is
polynomial
time
solvable
theorem
3.2
polynomial
time
algorithm
for
the
constrained
ranking
maximization
time
when
the
values
satisfy
property
problem
lu
for
can
be
solved
in
the
above
is
obtained
by
reducing
this
variant
of
the
ranking
maximization
problem
to
the
minimum
cost
flow
problem
that
can
be
solved
efficiently
the
network
is
acyclic
we
note
that
even
though
the
running
time
is
polynomial
in
it
might
be
still
not
satisfactory
for
practical
purposes
with
the
aim
of
designing
faster
linear
time
algorithms
we
focus
on
the
case
when
only
upper-bound
constraints
are
present
for
this
case
we
analyze
natural
linear
programming
lp
relaxation
for
the
constrained
ranking
maximization
problem
it
reveals
interesting
structure
of
the
problem
and
motivates
fast
greedy
algorithm
formally
the
relaxation
considers
the
set
ωm
defined
as
ωm
xij
for
all
xij
for
all
and
the
following
linear
program
max
ωm
wij
xij
xx
xij
uk
observe
that
in
the
absence
of
fairness
constraints
represents
the
maximum
weight
bipartite
matching
problem
it
is
well
known
that
the
feasible
region
of
its
fractional
relaxation
has
integral
vertices
and
hence
the
optimal
values
of
these
two
coincide
however
in
the
constrained
setting
even
for
it
can
be
shown
that
the
feasible
region
is
no
longer
integral
it
can
have
fractional
vertices
see
fact
8.2
for
this
reason
it
is
not
true
that
maximizing
any
linear
objective
results
in
an
integral
solution
surprisingly
we
prove
that
for
the
cost
functions
we
consider
are
special
and
never
yield
optimal
fractional
vertex
solutions
theorem
3.3
exact
lp-based
algorithm
for
see
theorems
8.1
and
8.3
consider
the
linear
programming
relaxation
for
the
constrained
ranking
maximization
problem
when
and
the
objective
function
satisfies
then
there
exists
an
optimal
solution
with
integral
entries
and
hence
the
relaxation
is
exact
further
there
exists
greedy
algorithm
to
find
an
optimal
integral
solution
in
np
time
the
proof
relies
on
combinatorial
argument
on
the
structure
of
tight
constraints
that
crucially
uses
the
assumption
that
and
the
property
of
the
objective
function
note
that
the
result
of
theorem
3.3
implies
in
particular
that
whenever
the
linear
program
is
feasible
then
there
is
also
an
integer
solution
feasible
ranking
this
can
be
also
argued
for
the
general
lu
variant
of
the
problem
and
its
corresponding
lp
relaxation
however
extending
theorem
3.3
to
this
case
seems
more
challenging
and
is
left
as
an
open
problem
when
trying
to
design
algorithms
for
larger
the
difficulty
is
that
the
constrained
ranking
feasibility
problem
remains
np-hard
in
fact
even
hard
to
approximate
when
feasibility
is
guaranteed
for
see
theorems
10.1
and
10.2
together
these
results
imply
that
unless
we
restrict
to
feasible
instances
of
the
constrained
ranking
problem
it
is
impossible
to
obtain
any
reasonable
approximation
algorithm
for
this
problem
in
order
to
bypass
this
barrier
we
focus
on
the
variant
of
the
problem
and
present
an
algorithmically
verifiable
condition
for
feasibility
and
argue
that
it
is
natural
in
the
context
of
information
retrieval
for
each
we
consider
the
set
sk
uk
of
all
properties
whose
constraints
increase
by
at
least
when
going
from
the
st
to
the
kth
position
we
observe
that
the
following
abundance
of
items
condition
is
sufficient
for
feasibility
there
are
at
least
items
ti
sk
intuitively
this
says
that
there
should
be
always
at
least
few
ways
to
extend
feasible
ranking
of
items
to
ranking
of
items
simple
examples
show
that
this
condition
can
be
necessary
for
certain
constraints
uk
in
practice
this
assumption
is
almost
never
problem
the
available
items
webpages
far
outnumber
the
size
of
the
ranking
number
of
results
displayed
in
the
first
page
and
the
number
of
properties
there
are
only
so
many
types
of
webpages
we
show
that
assuming
condition
there
is
linear-time
algorithm
that
achieves
an
approximation
while
only
slightly
violating
the
upper-bound
constraints
this
result
does
not
need
assumption
rather
only
that
the
wij
are
non-negative
this
result
is
near-optimal
we
provide
an
log
hardness
of
approximation
result
see
theorem
10.2
theorem
3.4
approximation
algorithm
see
theorem
9.1
for
the
constrained
ranking
maximization
problem
under
the
assumption
there
is
an
algorithm
that
in
linear
time
outputs
ranking
with
value
at
least
times
the
optimal
one
such
that
satisfies
the
upperbound
constraints
with
at
most
twice
multiplicative
violation
xx
xij
2uk
for
all
and
one
can
construct
artificial
instances
of
the
ranking
problem
where
the
output
of
the
algorithm
indeed
violates
upper-bound
constraints
with
multiplicative
factor
however
these
violations
are
caused
by
the
presence
of
high-utility
items
with
large
number
of
properties
such
items
are
unlikely
to
appear
in
real-life
instances
and
thus
we
expect
the
practical
performance
of
the
algorithm
to
be
better
than
the
worst-case
bound
given
in
theorem
3.4
suggests
lastly
we
summarize
our
hardness
results
for
the
constrained
ranking
problem
theorem
3.5
hardness
results
informal
the
following
variants
of
the
constrained
ranking
feasibility
and
constrained
ranking
maximization
problem
are
np-hard
deciding
feasibility
for
the
case
of
theorem
10.1
under
the
feasibility
condition
approximating
the
optimal
value
of
ranking
within
factor
log
for
any
theorem
10.2
deciding
feasibility
when
only
the
number
of
items
number
of
positions
and
upper-bounds
are
given
as
input
the
properties
are
fixed
for
every
theorem
10.3
for
every
constant
deciding
between
whether
there
exists
feasible
solution
or
every
solution
violates
some
constraint
by
factor
of
theorem
10.4
other
related
work
information
retrieval
which
focuses
on
selecting
and
ranking
subsets
of
data
has
rich
history
in
computer
science
and
is
well-established
subfield
in
and
of
itself
see
the
foundational
work
by
sb88
the
probability
ranking
principle
prp
forms
the
foundation
of
information
retrieval
research
mk60
rob77
in
our
context
it
states
that
system
ranking
should
order
items
by
decreasing
value
our
problem
formulation
and
solutions
are
in
line
with
this
subject
to
satisfying
the
diversity
constraints
related
problem
is
diverse
data
summarization
in
which
subset
of
items
with
varied
properties
must
be
selected
from
large
set
pdsat12
cdkv16
or
similarly
voting
with
diversity
constraints
in
which
subset
of
items
of
people
with
varied
properties
or
attributes
must
be
selected
via
voting
procedure
mon95
chv57
however
the
formulation
of
these
problem
is
considerably
different
as
there
is
no
need
to
produce
ranking
of
the
selected
items
and
hence
the
analogous
notion
of
constraints
is
more
relaxed
extending
work
on
fairness
in
classification
problems
zws
13
the
fair
ranking
problem
has
also
been
studied
as
an
unconstrained
multi-objective
optimization
problem
and
various
fairness
metrics
of
ranking
have
been
proposed
ys17
combining
the
learning
of
values
along
with
the
ranking
of
items
has
also
been
studied
rkj08
srg13
in
each
round
an
algorithm
chooses
an
ordered
list
of
documents
as
function
of
the
estimated
values
wij
and
can
receive
click
on
one
of
them
these
clicks
are
used
to
update
the
estimate
of
the
wij
and
bounds
on
the
regret
learning
rate
can
be
given
using
bandit
framework
in
this
problem
while
there
are
different
types
of
items
that
can
affect
the
click
probabilities
there
are
no
constraints
on
how
they
should
be
displayed
recent
work
has
shown
that
in
many
settings
there
are
impossibility
results
that
prevent
us
from
attaining
both
property
and
item
fairness
kmr17
indeed
our
work
focuses
on
ensuring
property
fairness
no
property
is
overrepresented
however
this
comes
at
an
expense
of
item
fairness
depending
on
which
properties
an
item
has
it
may
have
much
higher
lower
probability
of
being
displayed
than
another
item
with
the
same
value
in
our
motivating
application
we
deal
with
the
ranking
of
documents
or
webpages
and
hence
are
satisfied
with
this
trade-off
however
further
consideration
may
be
required
if
we
wish
to
rank
people
as
this
would
give
individuals
different
likelihoods
of
being
near
the
top
of
the
list
based
on
their
properties
rather
than
solely
on
their
value
organization
of
the
rest
of
the
paper
in
section
we
discuss
other
related
work
section
contains
an
overview
of
the
proofs
of
our
main
results
section
contains
the
proof
of
theorem
polynomial
time
algorithm
for
the
case
the
proof
of
theorem
3.1
on
the
exact
algorithm
for
general
is
presented
in
section
section
contains
the
proof
of
theorem
3.3
which
shows
that
there
exists
an
integral
solution
to
it
also
provides
simple
and
fast
greedy
algorithm
for
the
ranking
maximization
problem
for
section
contains
the
proof
of
theorem
3.4
which
gives
our
approximate
result
on
the
ranking
maximization
problem
for
general
our
hardness
results
are
presented
in
section
10
in
section
11
we
provide
discussion
of
possible
directions
for
future
work
and
open
problems
finally
in
appendix
we
give
brief
overview
of
some
common
ranking
metrics
and
explain
how
they
can
be
captured
by
values
wij
that
satisfy
proof
overviews
overview
of
the
proof
of
theorem
3.1
we
first
observe
that
the
constrained
ranking
maximization
problem
has
simple
geometric
interpretation
every
item
can
be
assigned
property
vector
ti
whose
th
entry
is
if
item
has
property
and
otherwise
we
can
then
think
of
the
constrained
ranking
pk
maximization
problem
as
finding
sequence
of
distinct
items
i1
i2
in
such
that
lk
tij
uk
for
all
where
uk
is
the
vector
whose
th
entry
is
in
other
words
we
require
that
the
partial
sums
of
the
vectors
corresponding
to
the
top
items
in
the
ranking
stay
within
the
region
lk1
uk1
lk2
uk2
lkn
ukn
defined
by
the
fairness
constraints
let
ti
be
the
set
of
all
the
different
property
vectors
ti
that
appear
for
items
and
let
us
denote
its
elements
by
v1
v2
vq
simple
but
important
observation
is
that
whenever
two
items
i1
i2
with
say
i1
i2
have
the
same
property
vector
ti1
ti2
then
in
every
optimal
solution
either
i1
will
be
ranked
above
i2
only
i1
is
ranked
or
neither
is
used
this
follows
from
the
assumption
that
the
weight
matrix
is
monotone
in
and
and
satisfies
the
property
as
stated
in
let
us
now
define
the
following
sub-problem
that
asks
for
the
property
vectors
of
feasible
solution
given
tuple
s1
s2
sq
nq
such
that
s1
s2
sq
what
is
the
optimal
way
to
obtain
feasible
ranking
on
items
such
that
sj
of
them
have
property
vector
equal
to
vj
for
all
given
solution
to
this
sub-problem
using
the
observation
above
it
is
easy
to
determine
which
items
should
be
used
for
given
property
vector
and
in
what
order
further
one
can
easily
solve
such
sub-problem
given
the
solutions
to
smaller
sub-problems
with
smaller
sum
of
sj
resulting
in
dynamic
programming
algorithm
with
nq
states
and
hence
roughly
the
same
running
time
overview
of
the
proof
of
theorem
3.2
the
main
idea
is
to
reduce
ranking
maximization
to
the
minimum
cost
flow
problem
and
then
observe
several
structural
properties
of
the
resulting
time
instance
which
allow
one
to
solve
it
efficiently
in
given
an
instance
of
the
constrained
ranking
maximization
problem
we
construct
weighted
flow
network
such
that
every
feasible
ranking
corresponds
to
feasible
flow
of
value
in
roughly
for
every
property
chain
of
vertices
is
constructed
so
that
placing
item
such
that
at
position
corresponds
to
sending
one
unit
of
flow
through
the
chain
corresponding
to
item
up
to
its
kth
vertex
and
then
sending
the
flow
to
sink
edge
weights
in
these
gadgets
chains
are
chosen
in
such
way
that
the
cost
of
sending
unit
through
this
path
is
wi
the
capacities
in
chains
corresponding
to
properties
implement
upper-bound
constraints
the
lower-bound
constraints
can
be
also
enforced
by
putting
appropriate
weights
on
edges
of
these
chains
the
instance
of
the
minimum
cost
flow
problem
we
construct
has
np
vertices
and
nm
edges
and
is
acyclic
which
allows
to
replace
the
application
of
the
bellman-ford
algorithm
in
the
first
phase
of
the
successive
shortest
path
algorithm
by
linear-time
procedure
this
then
easily
leads
to
an
implementation
in
n2
log
time
overview
of
the
proof
of
theorem
3.3
unlike
the
case
where
the
lp-relaxation
has
no
non-integral
vertex
it
is
the
assignment
polytope
even
when
fractional
vertices
can
arise
see
fact
8.2
theorem
3.3
implies
that
for
although
the
feasible
region
of
is
not
integral
in
all
directions
it
is
along
the
directions
of
interest
in
the
proof
we
first
reduce
the
problem
to
the
case
when
when
one
has
to
rank
all
of
the
items
and
has
the
strict
form
of
property
when
the
inequalities
in
assumption
are
strict
our
strategy
then
is
to
prove
that
for
every
fractional
feasible
solution
ωm
there
is
direction
rm
such
that
the
solution
x0
εy
is
still
feasible
for
some
and
its
weight
is
larger
than
the
weight
of
this
implies
that
every
optimal
solution
is
necessarily
integral
combinatorially
the
directions
we
consider
correspond
to
cycles
in
the
underlying
complete
bipartite
graph
such
that
the
weight
of
the
matching
can
be
improved
by
swapping
edges
along
the
cycle
the
argument
that
shows
the
existence
of
such
cycle
makes
use
of
the
special
structure
of
the
constraints
in
this
family
of
instances
to
illustrate
the
approach
suppose
that
there
exist
two
items
i1
i2
that
have
the
same
property
and
for
some
ranking
positions
j1
j2
we
have
xi1
j2
and
xi2
j1
following
the
strategy
outlined
above
consider
x0
εy
with
rm
to
be
zero
everywhere
10
except
yi1
j1
yi2
j2
and
yi1
j2
yi2
j1
we
would
like
to
prove
that
the
weight
of
x0
is
larger
than
the
weight
of
and
that
x0
is
feasible
for
some
possibly
small
the
reason
why
we
gain
by
moving
in
the
direction
of
follows
from
property
feasibility
in
turn
follows
because
is
orthogonal
to
every
constraint
defining
the
feasible
region
indeed
the
only
constraints
involving
items
i1
i2
are
those
corresponding
to
the
property
further
every
such
constraint
is
of
the
form1
h1rk
xi
uk
where
1rk
is
the
indicator
vector
of
rectangle
rk
such
rectangle
contains
either
all
non-zero
entries
of
two
non-zero
entries
with
opposite
signs
or
none
in
any
of
these
cases
h1rk
yi
using
reasoning
as
above
one
can
show
that
no
configuration
of
the
form
can
appear
in
any
optimal
solution
for
i1
i2
that
share
property
this
implies
that
the
support
of
every
optimal
solution
has
certain
structure
when
restricted
to
items
that
have
any
given
property
this
structure
allows
us
to
find
an
improvement
direction
in
case
the
solution
is
not
integral
to
prove
integrality
we
show
that
for
every
fractional
solution
rm
there
exists
fractional
entry
xij
that
can
be
slightly
increased
without
violating
the
fairness
constraints
moreover
since
the
i-th
row
and
the
j-th
column
must
contain
at
least
one
more
fractional
entry
each
since
the
row
and
column-sums
are
we
can
construct
as
above
direction
along
which
the
weight
can
be
increased
the
choice
of
the
corresponding
entries
that
should
be
altered
requires
some
care
as
otherwise
we
might
end
up
violating
fairness
constraints
the
second
part
of
theorem
3.3
is
an
algorithm
for
solving
the
constrained
ranking
maximization
problem
for
in
optimal
in
the
input
size
running
time
of
np
we
show
that
natural
greedy
algorithm
can
be
used
more
precisely
one
iteratively
fills
in
ranking
positions
by
always
selecting
the
highest
value
item
that
is
still
available
and
does
not
lead
to
constraint
violation
an
inductive
argument
based
that
relies
on
property
and
the
assumption
gives
the
correctness
of
such
procedure
overview
of
the
proof
of
theorem
3.4
let
be
arbitrary
the
most
important
part
of
our
algorithm
is
greedy
procedure
that
finds
large
weight
solution
to
slightly
relaxed
problem
in
which
not
all
positions
in
the
ranking
have
to
be
occupied
it
processes
pairs
in
non-increasing
order
of
weights
wij
and
puts
item
in
position
whenever
this
does
not
lead
to
constraint
violation
to
analyze
the
approximation
guarantee
of
this
algorithm
let
us
first
inspect
the
combinatorial
structure
of
the
feasible
set
in
total
there
are
fairness
constraints
in
the
problem
and
additionally
matching
constraints
saying
that
no
column
or
row
can
have
more
than
single
one
in
the
solution
matrix
however
after
relaxing
the
problem
to
the
one
where
not
all
ranking
positions
have
to
be
filled
one
can
observe
that
the
feasible
set
is
just
an
intersection
of
matroids
on
the
common
ground
set
indeed
two
of
them
correspond
to
the
matching
constraints
and
are
partition
matroids
the
remaining
matroids
correspond
to
properties
for
every
property
there
is
chain
of
subsets
s1
s2
sn
of
such
that
sk
uk
for
all
is
the
set
of
independent
sets
in
this
laminar
matroid
in
the
work
jen76
it
is
shown
that
the
greedy
algorithm
run
on
an
intersection
of
matroids
yields
k-approximation
hence
approximation
of
our
algorithm
follows
to
obtain
better
approximation
bound
more
careful
analysis
is
required
the
proof
is
based
on
the
fact
that
roughly
if
new
element
is
added
to
feasible
solution
then
at
most
elements
need
to
be
removed
from
to
make
it
again
feasible
thus
adding
greedily
by
we
denote
the
inner
product
between
two
matrices
if
rm
then
hx
yi
11
pm
pn
xij
yij
one
element
can
cost
us
absence
of
other
elements
of
weight
at
most
the
one
we
have
added
this
idea
can
be
formalized
and
used
to
prove
the
approximation
of
the
greedy
algorithm
this
is
akin
to
the
framework
of
k-extendible
systems
by
mes06
in
which
this
greedy
procedure
can
be
alternatively
analyzed
finally
we
observe
that
since
the
problem
solved
was
relaxation
of
the
original
ranking
maximization
problem
the
approximation
ratio
we
obtain
with
respect
to
the
original
problem
is
still
it
remains
to
complete
the
ranking
by
filling
in
any
gaps
that
may
have
been
left
by
the
above
procedure
this
can
be
achieved
in
greedy
manner
that
only
increases
the
value
of
the
solution
and
violates
the
constraints
by
at
most
multiplicative
factor
of
overview
of
the
proof
of
theorem
3.5
our
hardness
results
are
based
on
general
observation
that
one
can
encode
various
types
of
packing
constraints
using
instances
of
the
constrained
ranking
maximization
and
feasibility
problem
the
first
result
theorem
10.1
np-hardness
of
the
feasibility
problem
for
is
established
by
reduction
from
the
hypergraph
matching
problem
given
an
instance
of
the
hypergraph
matching
problem
one
can
think
of
its
hyperedges
as
items
and
its
vertices
as
properties
degree
constraints
on
vertices
can
then
be
encoded
by
upper-bound
constraints
on
the
number
of
items
that
have
certain
property
in
the
ranking
the
inapproximability
result
theorem
10.2
is
also
established
by
reduction
from
the
hypergraph
matching
problem
however
in
this
case
one
needs
to
be
more
careful
as
the
reduction
is
required
to
output
instances
that
are
feasible
our
next
hardness
result
theorem
10.3
illustrates
that
the
difficulty
of
the
constrained
ranking
optimization
problem
could
be
entirely
due
to
the
upper-bound
numbers
uk
in
particular
even
when
the
part
of
the
input
corresponding
to
which
item
has
which
property
is
fixed
and
only
depends
on
and
hence
can
be
pre-processed
as
in
fj12
the
problem
remains
hard
this
is
proven
via
reduction
from
the
independent
set
problem
the
properties
consists
of
all
pairs
of
items
i1
i2
for
i1
i2
given
any
graph
on
vertices
we
can
set
up
constrained
ranking
problem
whose
solutions
are
independent
sets
in
of
certain
size
since
every
edge
i1
i2
is
property
we
can
set
constraint
that
allows
at
most
one
item
vertex
from
this
property
edge
in
the
ranking
finally
theorem
10.4
states
that
it
is
not
only
hard
to
decide
feasibility
but
even
to
find
solution
that
does
not
violate
any
constraint
by
more
than
constant
multiplicative
factor
the
obstacle
in
proving
such
hardness
result
is
that
typically
even
if
given
instance
is
infeasible
it
is
easy
to
find
solution
that
violates
many
constraints
by
small
amount
to
overcome
this
problem
we
employ
an
inapproximability
result
for
the
maximum
independent
set
problem
by
has96
and
an
idea
by
ck05
our
reduction
roughly
puts
constraint
on
every
clique
in
the
input
graph
so
that
at
most
one
vertex
item
is
picked
from
it
then
solution
that
does
not
violate
any
constraint
by
multiplicative
factor
more
than
corresponds
to
set
of
vertices
such
that
the
induced
subgraph
has
no
c-clique
such
property
allows
us
to
prove
using
elementary
bounds
on
ramsey
numbers
that
has
large
independent
set
hence
given
an
algorithm
that
is
able
to
find
feasible
ranking
with
no
more
than
c-factor
violation
of
the
constraints
we
can
approximate
the
maximum
size
of
an
independent
set
in
graph
up
to
factor
of
roughly
which
is
hard
by
has96
polynomial
time
algorithm
for
proof
of
theorem
3.2
we
show
how
to
solve
the
constrained
ranking
maximization
problem
for
by
reformulating
it
as
minimum
cost
flow
problem
in
directed
network
for
clarity
we
begin
with
the
case
when
only
upper-bound
constraints
are
present
and
then
modify
the
12
construction
to
deal
with
lower-bounds
as
well
given
an
instance
of
the
constrained
ranking
maximization
problem
we
build
directed
weighted
capacitated
graph
such
that
the
solution
of
the
min
cost
flow
problem
on
allows
us
to
solve
the
instance
of
the
ranking
problem
there
are
two
special
vertices
source
and
sink
respectively
for
every
position
in
the
ranking
there
is
vertex
γk
corresponding
to
it
further
for
every
property
there
are
vertices
in
thus
in
total
there
are
np
vertices
in
we
proceed
to
describing
edges
for
every
position
there
is
an
edge
from
γk
to
with
unit
capacity
and
zero
cost
further
for
every
property
and
every
position
there
is
an
edge
from
to
γk
with
unit
capacity
and
zero
cost
finally
the
vertices
are
arranged
in
directed
chain
from
to
to
describe
the
corresponding
edges
let
us
denote
the
items
having
property
in
increasing
order
by
i1
i2
i3
is
where
is
the
number
of
items
having
property
the
vertex
is
connected
to
by
edges
one
for
each
item
of
this
property
each
of
unit
capacity
and
their
costs
are
zero
for
every
there
are
exactly
edges
going
from
to
each
of
unit
capacity
their
costs
are
as
follows
wi1
wi1
wi2
wi2
wiu
wiu
where
we
define
wi
for
every
item
the
idea
behind
the
above
construction
is
that
sending
one
unit
of
flow
from
to
for
some
position
and
then
to
and
all
the
way
to
for
some
position
incurs
cost
of
negative
wi1
and
corresponds
to
placing
i1
the
best
item
of
property
at
position
the
flow
is
then
sent
through
γk
to
which
guarantees
that
no
position
in
the
ranking
is
used
twice
thus
every
flow
of
value
corresponds
to
feasible
ranking
and
its
cost
is
the
negative
of
the
total
weight
of
that
given
ranking
similarly
the
optimal
ranking
has
flow
of
value
corresponding
to
it
we
now
prove
these
intuitions
formally
rankings
flows
we
show
that
if
is
the
optimal
ranking
then
it
can
be
translated
into
feasible
flow
of
value
and
cost
nk
wπ
let
us
start
by
simple
observation
for
every
property
the
relative
order
of
appearance
in
of
items
having
this
property
is
consistent
with
the
ordering
of
their
indices
i1
i2
i3
this
follows
from
the
monge
property
as
if
this
was
not
satisfied
then
swapping
some
of
the
items
an
incostistent
pair
would
cause
the
ranking
to
have
higher
total
weight
see
the
proof
of
theorem
7.1
for
more
details
to
construct
feasible
flow
from
we
scan
the
ranking
from
top
to
bottom
and
add
one
flow
path
at
time
suppose
that
item
is
placed
at
position
in
let
be
the
unique
property
item
has
we
send
one
unit
of
flow
along
the
following
path
γk
we
pick
the
edges
on
this
path
so
that
all
of
them
correspond
to
the
item
this
is
possible
by
our
observation
above
the
cost
contributed
by
this
path
is
wi
wi
wi
wi
wi
wi
wi
thus
the
total
cost
is
nk
wπ
as
claimed
it
remains
to
observe
that
such
flow
is
indeed
feasible
since
by
the
construction
the
capacities
along
the
chains
correspond
to
upper
bound
constraints
13
figure
an
illustration
of
the
graph
the
chain
corresponding
to
property
and
how
it
is
connected
to
the
γ-vertices
note
that
the
number
of
edges
between
and
is
and
hence
it
might
grow
with
γ1
γ2
γn
flows
ranking
suppose
is
feasible
flow
of
value
and
cost
cost
we
show
that
there
is
feasible
ranking
of
weight
at
least
cost
before
we
attempt
constructing
ranking
let
us
first
modify
the
flow
to
force
certain
structure
on
it
consider
any
property
and
any
position
in
the
ranking
if
there
are
units
of
flow
sent
between
and
then
we
will
assume
that
they
go
through
edges
of
smallest
cost
in
other
words
if
as
before
i1
i2
i3
are
all
the
items
having
property
in
increasing
order
then
the
edges
we
pick
have
costs
wi1
wi1
wi2
wi2
wic
wic
the
fact
that
these
are
the
edges
with
smallest
cost
follows
from
the
monge
property
given
such
structured
flow
we
can
easily
construct
ranking
with
the
same
weight
suppose
that
there
are
units
of
flow
entering
the
chain
and
leaving
it
through
vertices
γk1
γk2
γkc
then
we
set
k1
i1
k2
i2
kc
ic
where
as
above
i1
i2
ic
are
the
best
items
of
property
the
cost
of
this
part
of
the
flow
corresponding
to
is
then
wi1
k1
wi2
k2
wic
kc
pn
and
the
total
is
wπ
the
feasibility
of
this
ranking
follows
from
the
fact
that
at
most
units
of
flow
reach
and
thus
at
most
that
many
items
of
this
property
are
ranked
at
top-k
positions
so
far
our
reduction
captures
only
the
variant
of
the
ranking
problem
to
deal
with
lowerbounds
we
will
slightly
modify
the
edge
costs
of
the
constructed
flow
network
to
this
end
we
introduce
number
to
be
very
large
significantly
larger
than
any
entry
in
the
weight
matrix
for
property
and
position
in
the
ranking
we
modify
the
costs
of
the
edges
between
and
to
wi1
wi1
wil
wil
wil
wil
wiu
wiu
the
smallest
cost
edges
have
their
cost
further
decreased
by
we
can
now
make
so
large
that
we
force
all
these
edges
to
be
sent
flow
through
the
total
negative
cost
of
this
is
14
thus
in
particular
the
minimum
cost
flow
still
corresponds
to
feasible
rank
ing
if
such
exists
and
the
weight
of
the
optimal
ranking
is
recovered
as
cost
to
solve
the
constructed
instance
of
minimum
cost
flow
note
first
that
the
network
does
not
contain
any
negative-cost
cycle
in
fact
it
is
acyclic
which
is
sufficient
condition
for
the
problem
to
be
polynomial-time
solvable
one
can
use
the
successive
shortest
augmenting
paths
algorithm
see
amo93
to
solve
this
problem
efficiently
for
the
initial
computation
of
the
node
potentials
one
does
not
need
to
use
the
bellman-ford
algorithm
which
has
running
time
pmn2
but
take
advantage
of
the
fact
that
is
acyclic
and
compute
single
source
shortest
paths
from
by
sorting
the
vertices
topologically
and
running
simple
dynamic
programming
procedure
after
that
the
algorithm
needs
to
augment
the
flow
times
each
augmentation
requires
to
run
dijkstra
algorithm
once
takes
log
mn
log
time
thus
the
total
running
time
of
the
algorithm
is
nm
mn
log
n2
log
dynamic
programming-based
exact
algorithm
recall
that
for
an
instance
of
constrained
ranking
maximization
every
item
has
type
ti
assigned
to
it
which
is
the
set
of
all
properties
item
has
in
this
section
we
present
an
exact
dynamic
programming
algorithm
for
solving
the
constrained
ranking
maximization
problem
which
is
efficient
when
the
number
of
distinct
types
in
the
instance
is
small
we
start
by
providing
geometric
viewpoint
of
the
problem
which
arguably
makes
it
easier
to
visualize
and
provides
us
with
convenient
notation
under
which
the
dynamic
programming
algorithm
is
simpler
to
state
and
understand
7.1
geometric
interpretation
of
fairness
constraints
recall
that
in
an
instance
of
constrained
ranking
maximization
we
are
given
items
ranking
positions
and
properties
together
with
fairness
constraints
on
them
let
ti
1ti
be
the
vector
indicating
which
sets
of
item
belongs
to
we
call
this
the
type
of
note
that
every
ranking
can
be
described
either
by
binary
matrix
such
that
xij
if
and
only
if
item
is
ranked
at
position
or
alternatively
by
one-to-one
function
such
that
is
the
item
ranked
at
position
for
every
using
the
latter
convention
we
can
encode
the
fairness
condition
as
lk
tπ
uk
where
lk
lk1
lk2
lkp
and
uk
uk1
uk2
ukp
are
the
vectors
of
lower
and
upperbounds
at
position
in
other
words
ranking
is
feasible
if
and
only
if
the
kth
partial
sum
of
all
ti
vectors
of
items
at
top-k
positions
belongs
to
the
rectangle
lk1
uk1
lk2
uk2
lkp
ukp
for
every
7.2
the
dynamic
programming
algorithm
theorem
7.1
there
is
an
algorithm
that
solves
the
constrained
ranking
maximization
problem
lu
when
the
objective
function
satisfies
property
in
mp
pqnq
time
where
is
the
number
of
different
types
of
items
15
proof
it
is
convenient
to
assume
that
the
matrix
satisfies
strict
variant
of
property
in
which
all
the
inequalities
are
strict
the
general
case
follows
by
an
analogous
argument
for
an
item
recall
that
ti
1ti
is
the
vector
indicating
which
sets
item
belongs
to
further
let
ti
be
the
set
of
all
realized
types
denote
the
elements
of
by
v1
v2
vq
for
every
define
ti
and
let
for
every
we
denote
by
i1
i2
iq
the
list
of
items
in
in
increasing
order
note
that
if
in
an
optimal
solution
to
the
ranking
maximization
problem
exactly
items
come
from
then
these
items
are
exactly
i1
is
and
they
appear
in
increasing
order
in
the
solution
this
follows
from
property
of
as
follows
suppose
that
an
item
i1
is
placed
at
position
j2
and
an
item
i2
is
placed
at
position
j1
with
i1
i2
and
j1
j2
swapping
these
two
items
in
the
ranking
does
not
affect
feasibility
of
the
solution
and
the
difference
in
value
is
wi1
j1
wi2
j2
wi1
j2
wi2
j1
this
is
positive
due
to
the
strict
property
hence
the
swap
can
only
increase
the
weight
of
the
solution
similar
reasoning
shows
that
it
is
beneficial
to
swap
ranked
item
i2
with
an
unranked
item
i1
whenever
i1
i2
one
of
the
consequences
of
the
above
observations
is
that
we
can
assume
that
for
all
and
hence
nq
this
is
because
we
can
keep
at
most
best
items
from
every
set
and
discard
the
remaining
ones
as
they
will
not
be
part
of
any
optimal
solution
such
discarding
can
be
done
in
time
roughly
if
an
instance
with
is
given
the
above
allows
us
to
reduce
the
number
of
candidate
rankings
which
one
has
to
check
to
roughly
however
this
number
is
still
prohibitively
large
as
in
many
scenarios
of
interest
we
construct
dynamic
programming
algorithm
with
much
fewer
states
nqp
now
consider
the
following
sub-problem
for
any
tuple
s1
s2
sq
nq
with
let
s1
s2
sq
be
the
largest
weight
of
feasible
ranking
with
top-k
positions
occupied
such
that
exactly
items
are
picked
from
for
every
let
us
now
describe
an
algorithm
for
computing
s1
s2
sq
first
initialize
all
entries
s1
s2
sq
to
and
set
next
consider
all
valid
tuples
s1
s2
sq
in
order
of
increasing
values
of
suppose
that
we
would
like
to
compute
s1
s2
sq
first
one
must
check
whether
the
fairness
constraint
at
position
is
satisfied
for
this
we
calculate
note
that
the
th
coordinate
of
represents
the
number
of
items
having
property
hence
necessary
condition
for
the
tuple
s1
s2
sq
to
represent
feasible
ranking
is
that
lk
uk
if
that
is
not
satisfied
we
just
set
s1
s2
sq
otherwise
consider
all
possibilities
for
the
type
of
item
that
is
placed
at
the
last
position
suppose
it
is
of
type
it
belongs
to
then
we
have
s1
s2
sq
s1
sq
wik
where
is
hence
in
order
to
compute
s1
s2
sq
we
simply
iterate
over
all
possible
types
and
find
the
maximum
value
we
can
get
from
the
above
correctness
follows
from
the
fact
that
the
th
item
of
type
in
every
optimal
ranking
is
always
is
the
total
number
of
sub-problems
is
at
most
hence
the
above
algorithm
can
be
implemented
in
time
nq
where
time
is
required
to
read
the
input
and
construct
16
the
list
of
elements
of
every
given
type
the
second
term
nq
appears
because
there
are
nq
subproblems
each
such
sub-problem
considers
cases
and
every
case
has
feasibility
check
that
takes
time
algorithms
for
and
upper-bound
constraints
8.1
integrality
of
lp
solutions
theorem
8.1
consider
the
lp
relaxation
for
the
constrained
ranking
maximization
problem
when
the
properties
p1
pp
are
pairwise
disjoint
if
rm
satisfies
then
there
exists
an
optimal
integral
solution
to
proof
without
loss
of
generality
we
can
assume
that
via
simple
extension
of
the
problem
as
follows
extend
the
matrix
rm
to
square
matrix
rm
by
setting
wij
for
and
eij
for
and
further
for
every
and
we
set
uk
no
constraint
is
imposed
on
these
positions
note
that
still
satisfies
property
moreover
every
solution
ωm
to
the
original
problem
can
be
extended
to
solution
ωm
while
preserving
the
weight
xi
hw
ei
where
denotes
the
inner
product
between
two
matrices
hw
xi
pm
pm
hw
similarly
every
solution
to
the
extended
problem
when
restricted
to
first
ij
ij
columns
yields
solution
to
the
original
problem
with
the
same
weight
thus
it
suffices
to
prove
that
the
extended
problem
has
an
optimal
integral
solution
and
for
the
remainder
of
this
section
we
assume
that
for
simplicity
assume
that
the
matrix
satisfies
the
strict
variant
of
property
when
the
inequalities
in
are
strict
this
can
be
achieved
by
small
perturbation
of
the
weights
without
changing
the
optimal
ranking
our
proof
consist
of
two
phases
in
the
first
phase
we
show
that
every
optimal
solution
satisfies
certain
property
on
its
support
in
the
second
phase
we
show
that
no
optimal
solution
that
has
this
property
can
have
fractional
entries
let
us
state
the
property
of
feasible
solution
ωm
that
we
would
like
to
establish
i1
i2
j1
j2
i1
i2
j1
j2
xi2
j1
xi1
j2
in
other
words
whenever
we
have
two
items
i1
i2
that
have
the
same
property
if
i1
is
before
i2
i1
is
better
than
i2
then
for
any
position
j1
j2
such
that
j1
is
above
j2
then
xi2
j1
and
xi1
j2
cannot
both
be
positive
we
show
that
if
does
not
satisfy
condition
then
it
is
not
optimal
to
this
end
take
fractional
solution
for
which
there
is
some
i1
i2
and
j1
j2
for
which
the
condition
does
not
hold
now
consider
solution
of
the
form
x0
where
i1
j1
i2
j2
i1
j2
i2
j1
for
some
and
rm
denotes
the
matrix
with
single
non-zero
entry
at
of
value
since
xi1
j2
and
xi2
j1
we
can
find
some
such
that
x0
furthermore
pn
we
claim
that
such
solution
is
still
feasible
for
indeed
for
every
item
we
have
yij
we
can
conclude
that
x0ij
17
xij
pm
similarly
for
every
rank
position
we
have
xi
xi
hence
ωm
it
remains
to
show
that
x0
satisfies
all
of
the
fairness
constraints
note
that
it
is
enough
to
consider
fairness
constraints
coming
from
the
property
as
i1
i2
i1
i2
for
any
and
variables
xi1
j1
xi1
j2
xi2
j1
xi2
j2
do
not
appear
in
other
constraints
every
such
constraint
is
of
the
form
h1rk
xi
uk
where
1rk
is
the
indicator
vector
matrix
of
the
rectangle
submatrix
since
h1rk
yi
for
every
such
rectangle
we
have
1rk
x0
h1rk
εyi
h1rk
xi
uk
therefore
x0
is
feasible
for
furthermore
because
of
the
strict
property
we
have
x0
hw
xi
wi1
j1
wi2
j2
wi1
j2
wi2
j1
hw
xi
as
this
is
feasible
solution
with
strictly
better
objective
value
we
conclude
that
was
not
optimal
hence
every
optimal
solution
necessarily
satisfies
suppose
now
for
sake
of
contradiction
that
satisfies
and
is
not
integral
consider
fractional
entry
xi0
j0
of
with
i0
as
small
as
possible
and
in
case
of
tie
j0
as
small
as
possible
suppose
that
the
item
i0
belongs
to
for
some
note
that
there
exists
an
entry
i0
j1
with
j1
j0
such
that
xi0
j1
this
is
due
to
the
fact
that
i0
j0
and
xi0
xi0
j0
fix
the
smallest
possible
j1
with
this
property
because
of
the
constraint
xij0
there
exists
at
least
one
more
fractional
entry
in
the
j0
th
column
let
us
call
it
xi1
j0
it
follows
that
i1
i0
note
also
that
i1
as
if
i1
then
condition
would
be
violated
let
us
again
consider
new
candidate
solution
using
the
indices
defined
above
x0
i1
j1
i2
j2
i1
j2
i2
j1
we
show
that
x0
is
feasible
for
some
which
then
contradicts
the
fact
that
is
optimal
because
of
the
strict
version
of
property
to
do
this
it
suffices
to
ensure
that
x0
does
not
violate
any
fairness
constraints
imposed
by
the
property
note
that
for
j0
j0
j1
the
constraints
xx
xx
xij
uk
x0ij
remain
satisfied
hence
it
only
remains
to
show
that
no
constraint
kj
xij
uk
is
tight
at
for
j0
j0
j1
observe
that
because
of
our
choice
of
i0
j0
all
entries
in
the
rectangle
j0
are
integral
furthermore
in
the
rectangle
j0
j0
j1
the
only
non-zero
entry
is
xi0
j0
due
to
the
fact
that
xi0
j1
and
condition
is
satisfied
now
because
uk
but
for
as
above
kj
xij
the
constraint
cannot
be
tight
thus
x0
is
feasible
for
some
and
hence
is
not
an
optimal
solution
to
hence
no
optimal
solution
has
fractional
entries
in
contrast
to
the
above
theorem
some
vertices
of
the
feasible
region
might
be
non-integral
fact
8.2
there
exists
an
instance
of
the
ranking
maximization
problem
for
such
that
the
feasible
region
of
has
fractional
vertices
18
proof
let
and
suppose
there
is
only
one
property
p1
and
the
constraints
are
u21
and
uk1
for
in
other
words
we
only
constrain
the
ranking
to
have
at
most
element
of
property
in
the
top-2
entries
consider
the
following
point
clearly
is
feasible
observe
that
the
support
of
has
2n
elements
and
there
are
exactly
that
many
linearly
independent
tight
constraints
at
that
point
indeed
the
doubly-stochastic
constraints
give
us
2n
constraints
out
of
which
2n
are
linearly
independent
and
the
remaining
one
is
x1
x1
x2
x2
therefore
is
non-integral
vertex
of
the
feasible
region
of
8.2
fast
greedy
algorithm
due
to
the
special
structure
for
we
are
able
to
find
fast
simple
algorithm
for
the
ranking
maximization
problem
in
this
case
theorem
8.3
there
exists
an
algorithm
which
given
an
instance
of
the
constrained
ranking
maximization
problem
with
and
objective
function
that
satisfies
property
outputs
an
optimal
ranking
in
time
proof
for
simplicity
assume
that
satisfies
the
strict
variant
of
property
with
strict
inequalities
in
the
definition
this
can
be
assumed
without
loss
of
generality
by
slightly
perturbing
consider
the
following
greedy
algorithm
that
iteratively
constructs
ranking
is
the
item
ranked
at
position
for
all
for
to
let
be
the
smallest
index
of
an
item
which
was
not
yet
picked
and
can
be
added
at
position
without
violating
any
constraint
if
there
is
no
such
output
infeasible
set
output
it
is
clear
that
if
the
above
algorithm
outputs
ranking
then
is
feasible
assume
now
that
it
indeed
outputs
ranking
we
will
show
that
it
is
optimal
take
any
optimal
ranking
let
be
any
property
for
and
let
i1
i2
is
be
the
list
of
items
in
in
increasing
order
we
claim
that
if
ranks
exactly
items
from
then
these
have
to
be
i1
i2
ir
in
that
order
for
this
note
that
when
swapping
two
elements
say
i1
i2
at
positions
j2
j1
in
the
ranking
with
say
j1
j2
the
change
in
weight
is
equal
to
wi1
j1
wi2
j2
wi1
j2
wi2
j1
this
alternate
notation
makes
the
exposition
in
this
section
cleaner
see
also
the
notation
and
problem
formulation
in
section
7.1
19
because
of
the
strict
property
hence
it
is
always
beneficial
to
rank
the
items
in
in
increasing
order
furthermore
it
can
be
argued
using
monotonicity
that
it
is
always
optimal
to
select
the
items
with
smallest
indices
for
the
ranking
one
of
the
consequences
of
the
above
observations
is
that
we
can
assume
that
for
all
and
hence
np
this
is
because
we
can
keep
at
most
best
items
with
property
and
discard
the
remaining
ones
as
they
will
not
be
part
of
any
optimal
solution
such
discarding
can
be
done
in
time
time
if
an
instance
with
is
given
further
the
above
observation
allows
us
to
now
prove
optimality
of
the
greedy
strategy
take
the
largest
number
such
that
and
agree
on
for
if
then
there
is
nothing
to
prove
let
us
then
assume
that
and
ia
io
there
are
two
cases
either
ia
is
ranked
in
or
it
is
not
in
the
first
case
let
be
the
position
in
such
that
ia
clearly
let
be
ranking
identical
to
but
with
positions
and
swapped
we
claim
that
is
still
feasible
and
has
larger
weight
than
the
claim
about
weights
follows
easily
from
the
strict
property
let
us
now
reason
about
feasibility
of
let
be
the
only
property
of
ia
ia
and
let
be
the
total
number
of
elements
of
property
in
top
positions
of
or
equivalently
of
note
that
by
doing
the
swap
we
could
have
only
violated
some
constraint
corresponding
to
since
ia
we
know
that
and
similarly
uk
uk
un
further
because
of
our
previous
observation
no
item
is
ranked
at
position
for
in
for
this
reason
the
fairness
constraints
corresponding
to
at
are
satisfied
for
there
are
elements
of
property
in
top-k
items
in
the
second
case
is
very
similar
one
can
reason
that
if
ia
is
not
included
in
the
ranking
then
by
changing
its
kth
position
to
ia
we
obtain
ranking
which
is
still
feasible
but
has
larger
value
hence
if
this
contradicts
the
optimality
of
thus
and
is
the
optimal
ranking
by
the
same
argument
one
can
show
that
if
the
instance
is
feasible
the
greedy
algorithm
will
never
fail
to
output
solution
report
infeasibility
let
us
now
discuss
briefly
the
running
of
such
greedy
algorithm
for
every
property
we
can
maintain
an
ordered
list
of
elements
of
which
were
not
yet
picked
to
the
solution
and
count
of
items
of
property
which
are
already
part
of
the
solution
then
for
every
ranking
position
we
just
need
to
look
at
the
first
element
of
every
list
for
and
one
of
them
will
be
the
best
feasible
item
having
the
counters
we
can
check
feasibility
in
time
and
we
can
also
update
our
lists
and
counters
in
per
rank
position
for
this
reason
every
rank
position
is
handled
in
time
note
also
that
at
the
beginning
all
the
lists
can
be
constructed
in
total
time
since
we
can
go
over
the
items
in
the
reverse
order
and
place
every
item
at
the
beginning
of
suitable
list
in
time
hence
the
total
running
time
is
approximation
algorithm
theorem
9.1
there
exists
linear
time
algorithm
which
given
an
instance
of
the
constrained
ranking
maximization
problem
satisfying
condition
outputs
ranking
whose
weight
is
at
least
times
the
optimal
one
and
satisfies
all
fairness
constraints
up
to
factor
of
xx
xi
2uk
for
all
and
proof
the
algorithm
can
be
divided
into
two
phases
first
we
construct
partial
ranking
that
may
leave
some
positions
empty
and
then
we
refine
it
to
yield
complete
ranking
20
the
first
phase
is
finding
close
to
optimal
solution
to
the
following
integer
program
max
xij
wij
xx
xij
uk
for
all
and
is
the
set
of
all
such
that
for
all
and
where
xij
and
xij
note
that
this
is
relaxation
of
our
problem
as
it
does
not
require
every
position
in
the
ranking
to
be
filled
in
the
proof
we
will
often
refer
to
pair
as
cell
since
we
treat
them
as
entries
in
dimensional
array
consider
the
following
greedy
algorithm
which
can
be
used
to
find
likely
non-optimal
integral
solution
to
the
problem
order
the
cells
according
to
non-increasing
values
of
wij
set
zij
for
all
process
the
cells
one
by
one
if
adding
to
the
solution
does
not
cause
any
constraint
violation
set
zij
otherwise
move
to
the
next
cell
times
the
we
claim
that
the
solution
given
by
this
algorithm
has
value
at
least
optimal
solution
in
other
words
zij
wij
opt
where
opt
denotes
the
optimal
solution
to
to
prove
it
let
us
denote
by
i1
j1
i2
j2
in
jn
the
set
of
cells
picked
by
the
algorithm
in
the
same
order
as
they
were
added
to
the
solution
let
also
sr
i1
j1
i2
j2
ir
jr
for
for
denote
by
optr
the
optimal
solution
to
under
the
condition
that
the
cells
from
sr
are
part
of
the
solution
or
in
other
words
under
the
additional
constraint
that
xij
for
all
sr
we
claim
that
for
every
it
holds
that
10
optr
optr
wir
jr
21
note
that
given
10
the
claim
follows
easily
indeed
we
have
opt
opt0
and
opt0
opt1
wi1
j1
opt2
wi1
j1
wi2
j2
optn
ir
jr
wir
jr
the
last
equality
follows
from
the
fact
that
sn
is
maximal
solution
it
cannot
be
extended
hence
indeed
optn
zij
wij
ir
jr
thus
it
remains
to
prove
10
for
this
take
any
and
consider
the
optimal
solution
set
of
cells
which
contains
sr
thus
wij
optr
if
ir
jr
then
we
are
done
as
10
follows
straightforwardly
otherwise
consider
00
ir
jr
we
claim
that
there
is
set
of
cells
sr
with
such
that
00
is
feasible
for
the
relaxed
problem
this
then
implies
10
as
sr
00
and
every
cell
has
weight
wij
wir
jr
to
construct
pick
from
the
cell
lying
in
the
same
column
as
ir
jr
and
the
cell
lying
in
the
same
row
as
ir
jr
if
they
exist
and
add
to
this
is
to
make
sure
that
in
00
there
is
at
most
one
cell
in
every
row
and
every
column
now
consider
any
property
for
which
fairness
constraints
might
have
been
violated
in
00
then
necessarily
tir
moreover
because
of
the
laminar
matroid
structure
of
the
constraints
corresponding
to
single
property
one
can
find
cell
sr
such
that
00
satisfies
all
fairness
constraints
for
property
thus
by
adding
to
one
such
cell
whenever
it
exists
for
every
property
tir
we
obtain
set
of
at
most
cells
such
that
00
is
feasible
this
concludes
the
proof
that
the
above
algorithm
finds
an
approximation
to
the
integer
program
let
us
now
show
how
to
construct
full
ranking
out
of
it
let
zij
for
all
zij
for
all
we
will
construct
new
solution
such
that
is
supported
on
it
has
at
most
one
in
every
row
and
column
it
has
exactly
one
in
every
column
and
satisfies
all
fairness
constraints
note
that
if
we
then
define
then
has
the
properties
as
claimed
in
the
theorem
statement
indeed
pm
and
further
for
every
and
xx
xx
xij
zij
yij
xx
xij
uk
uk
22
xx
yij
the
approximation
guarantee
follows
because
has
nonnegative
contribution
to
the
total
weight
and
the
guarantee
on
is
with
respect
to
relaxed
problem
whose
optimal
value
is
an
upperbound
on
the
optimal
value
of
the
ranking
maximization
problem
hence
it
remains
to
find
with
properties
as
above
we
can
construct
using
another
greedy
procedure
let
we
process
the
elements
of
one
at
time
in
increasing
order
when
considering
given
pick
any
such
that
adding
to
the
solution
does
not
introduce
fairness
constraint
violation
it
is
clear
that
if
the
above
algorithm
succeeds
to
find
suitable
at
every
step
then
it
succeeds
to
construct
solution
with
the
required
properties
it
remains
to
show
that
this
is
indeed
the
case
to
this
end
fix
and
look
at
the
step
in
which
is
considered
from
condition
we
know
that
there
are
at
least
elements
in
that
can
be
placed
at
position
without
violating
any
constraint
out
of
these
elements
some
may
have
been
already
taken
by
the
above
algorithm
they
are
not
in
and
some
of
them
could
have
been
added
to
the
new
solution
however
as
there
were
of
them
to
begin
with
at
least
one
remains
and
can
be
selected
this
concludes
the
proof
of
correctness
of
the
above
procedure
it
remains
to
observe
that
both
phases
of
the
algorithm
after
simple
preprocessing
can
be
implemented
in
linear
time
10
hardness
results
in
this
section
we
state
and
prove
our
hardness
results
regarding
the
constrained
ranking
feasibility
and
maximization
problems
for
the
variant
since
some
of
the
proofs
involve
the
hypergraph
matching
problem
let
us
define
this
concept
formally
hypergraph
is
pair
composed
of
vertex
set
and
hyperedge
set
given
we
call
hypergraph
if
every
hyperedge
has
cardinality
at
most
the
hypergraph
matching
is
the
following
decision
problem
given
hypergraph
and
number
decide
whether
there
exists
set
of
pairwise
disjoint
hyperedges
in
such
set
is
called
matching
the
optimization
variant
of
this
problem
asks
for
largest
cardinality
matching
the
name
above
is
intended
to
be
suggestive
recall
that
in
the
context
of
the
constrained
ranking
feasibility
or
maximization
problem
the
parameter
is
the
maximum
number
of
properties
any
given
item
has
the
first
hardness
result
states
that
even
for
small
the
constrained
ranking
feasibility
is
hard
theorem
10.1
the
constrained
ranking
feasibility
problem
is
np-hard
for
any
proof
we
present
reduction
from
hypergraph
matching
which
is
known
to
be
np-hard
for
let
be
hypergraph
and
let
be
number
for
which
we
want
to
test
whether
there
is
matching
of
size
we
construct
an
instance
of
the
constrained
ranking
problem
whose
feasibility
is
equivalent
to
having
matching
of
cardinality
as
follows
let
be
the
number
of
hyperedges
in
indexed
by
e1
e2
em
and
let
be
the
number
of
vertices
in
indexed
by
v1
v2
vp
set
the
number
of
items
in
the
ranking
problem
to
be
where
the
ith
item
corresponds
to
edge
ei
and
set
the
number
of
positions
in
the
ranking
to
be
for
every
vertex
introduce
property
as
follows
ei
thus
there
are
properties
note
that
as
each
hyperedge
ei
contains
at
most
vertices
ti
for
all
items
as
desired
for
every
and
let
uk
23
it
remains
to
argue
that
has
matching
of
cardinality
if
and
only
if
the
instance
of
the
constrained
ranking
problem
is
feasible
if
has
matching
of
cardinality
then
let
ei
define
ranking
by
taking
the
elements
of
in
any
order
since
is
matching
every
vertex
belongs
to
at
most
one
hyperedge
in
thus
for
every
property
we
have
and
hence
all
of
the
fairness
constraints
are
satisfied
similarly
the
reasoning
in
the
opposite
direction
that
feasible
ranking
yields
matching
of
cardinality
follows
by
letting
be
the
set
of
hyperedges
corresponding
to
the
items
that
were
ranked
one
possibility
is
that
it
is
the
feasibility
of
this
problem
that
makes
it
hard
however
this
is
not
the
case
our
next
theorem
says
that
even
if
we
guarantee
feasibility
via
assumption
the
problem
remains
hard
to
approximate
theorem
10.2
feasible
constrained
ranking
maximization
problem
that
satisfies
condition
and
has
weights
that
satisfy
property
is
np-hard
to
approximate
within
factor
of
log
proof
in
the
proof
we
will
use
the
fact
that
the
maximum
hypergraph
matching
problem
is
hard
to
approximate
within
factor
of
log
hss03
we
present
an
approximation-preserving
reduction
from
the
maximum
hypergraph
matching
problem
the
proof
is
similar
to
that
of
of
theorem
10.1
however
we
must
now
ensure
that
the
resulting
instance
is
feasible
and
satisfies
condition
for
hypergraph
with
vertices
v1
v2
vp
and
hyperedges
e1
e2
em
construct
an
instance
of
constrained
ranking
maximization
problem
as
follows
let
m0
2m
be
the
number
of
items
and
let
be
the
number
of
positions
in
the
ranking
the
items
correspond
to
edges
e1
e2
em
and
the
remaining
items
2m
we
call
improper
items
as
in
the
proof
of
theorem
10.1
for
every
vertex
we
define
property
ei
the
fairness
constraints
are
defined
by
upper-bounds
uk
for
all
and
improper
items
do
not
belong
to
any
property
and
hence
condition
is
satisfied
furthermore
they
can
never
cause
fairness
constraint
to
be
violated
lastly
we
let
if
wij
if
2m
note
that
such
matrix
satisfies
the
property
every
matching
of
cardinality
in
corresponds
to
feasible
ranking
of
total
weight
in
our
instance
of
ranking
maximization
simply
take
the
items
corresponding
to
edges
in
the
matching
and
add
any
improper
items
similarly
every
ranking
of
weight
can
be
transformed
into
matching
of
size
as
the
reduction
is
approximation
preserving
we
conclude
that
the
constrained
ranking
maximization
problem
is
np-hard
to
approximate
within
factor
better
than
log
our
next
result
says
that
the
constrained
ranking
feasibility
is
hard
even
when
we
fix
the
structure
of
the
set
of
properties
the
only
input
to
the
problem
are
the
upper-bound
constraints
theorem
10.3
there
exists
fixed
family
of
properties
pm
for
and
pm
pm
m2
such
that
the
problem
given
and
matrix
of
upper-bound
values
nn
pm
check
whether
the
constrained
ranking
instance
defined
by
pm
and
is
feasible
is
np-hard
proof
let
the
family
of
properties
pm
be
all
element
subsets
of
pm
i1
i2
i1
i2
i1
i2
24
we
reduce
the
independent
set
problem
to
the
above
problem
of
constrained
ranking
maximization
with
fixed
property
set
consider
any
instance
of
the
independent
set
problem
graph
and
the
underlying
question
is
is
there
an
independent
set
of
size
in
construct
corresponding
instance
of
constrained
ranking
maximization
as
follows
the
number
of
ranking
positions
is
and
there
are
items
to
rank
one
for
every
vertex
thus
there
is
property
for
each
pair
of
vertices
for
every
edge
i1
i2
set
fairness
constraint
that
restricts
the
number
of
items
having
property
in
the
top-n
positions
to
be
at
most
un
in
other
words
at
most
one
item
out
of
any
i1
i2
can
appear
the
ranking
for
all
non-edges
we
leave
the
upper-bound
constraint
on
the
corresponding
property
unspecified
or
equivalently
we
let
uk
for
all
i1
i2
clearly
feasible
rankings
are
in
one-to-one
correspondence
with
independent
sets
of
size
in
indeed
if
we
place
items
vertices
from
an
independent
set
of
size
in
the
ranking
in
any
order
then
the
resulting
ranking
is
feasible
as
the
only
essential
constraints
which
are
imposed
on
the
ranking
are
that
for
every
edge
i1
i2
at
most
one
of
i1
i2
is
present
in
the
ranking
conversely
if
these
constraints
are
satisfied
the
set
of
items
placed
in
the
ranking
forms
an
independent
set
of
size
as
the
independent
set
problem
is
np-hard
via
the
above
reduction
we
obtain
hardness
of
the
constrained
ranking
maximization
problem
with
fixed
properties
lastly
one
could
hope
that
it
is
still
possible
solve
the
constrained
ranking
maximization
problem
by
allowing
constraints
to
be
violated
by
small
amount
however
this
also
remains
hard
the
result
states
that
finding
solution
which
violates
all
the
constraints
at
most
factor
of
for
any
constant
is
np-hard
interestingly
our
proof
relies
on
certain
bound
from
ramsey
theory
theorem
10.4
for
every
constant
the
following
violation
gap
variant
of
the
constrained
ranking
feasibility
problem
is
np-hard
output
yes
if
the
input
instance
is
satisfiable
output
no
if
there
is
no
solution
which
violates
every
upper-bound
constraint
at
most
times
proof
the
reduction
is
inspired
by
an
idea
developed
for
the
approximation
hardness
of
packing
integer
programs
by
ck05
we
use
the
inapproximabality
of
independent
set
has96
zuc07
to
prove
the
theorem
it
states
that
approximating
the
cardinality
of
the
maximum
independent
set
in
an
undirected
graph
to
within
factor
of
is
np-hard
for
every
constant
fix
constant
and
without
loss
of
generality
assume
that
consider
the
following
reduction
given
an
instance
of
the
independent
set
problem
graph
and
number
the
goal
is
to
check
whether
there
is
an
independent
set
of
size
in
let
the
set
of
items
be
and
the
number
of
positions
in
the
ranking
to
be
for
every
clique
of
cardinality
in
add
new
property
and
set
an
upper-bound
on
the
number
of
elements
in
in
the
top-n
positions
of
the
ranking
un
note
that
these
are
at
most
mc
poly
constraints
we
claim
the
following
if
there
is
ranking
that
violates
all
of
the
constraints
at
most
factor
of
then
there
is
an
independent
set
of
cardinality
in
if
there
is
no
feasible
ranking
then
there
is
no
independent
set
of
cardinality
in
25
note
that
proving
the
above
suffices
to
obtain
the
desired
result
if
there
was
procedure
to
solve
the
constrained
ranking
feasibility
problem
for
then
one
could
approximate
in
polynomial
time
the
cardinality
of
the
maximum
independent
set
in
graph
with
an
approximation
ratio
of
which
is
not
possible
unless
has96
zuc07
hence
it
remains
to
establish
the
claim
to
establish
the
second
claim
note
that
every
independent
set
of
size
gives
feasible
solution
to
the
constrained
ranking
instance
by
placing
the
items
corresponding
to
in
the
ranking
in
any
order
to
establish
the
first
claim
suppose
that
there
is
solution
that
violates
every
constraint
by
at
most
factor
of
this
means
that
we
have
subset
containing
vertices
in
that
does
not
contain
any
clique
using
standard
upper-bound
on
the
ramsey
number
it
follows
that
in
the
subgraph
induced
by
in
there
exists
an
independent
set
of
cardinality
n1
11
discussion
and
future
work
in
this
paper
motivated
by
controlling
and
alleviating
algorithmic
bias
in
information
retrieval
we
initiate
the
study
of
the
complexity
of
natural
constrained
optimization
problem
concerning
rankings
our
results
indicate
that
the
constrained
ranking
maximization
problem
which
is
generalization
of
the
classic
bipartite
matching
problem
shows
fine-grained
complexity
both
the
structure
of
the
constraints
and
the
numbers
appearing
in
upper-bounds
play
role
in
determining
its
complexity
moreover
this
problem
generalizes
several
hypergraph
matching
packing
problems
our
algorithmic
results
bypass
the
obstacles
implicit
in
the
past
theory
work
by
leveraging
on
the
structural
properties
of
the
constraints
and
common
objective
functions
from
information
retrieval
more
generally
our
results
not
only
contribute
to
the
growing
set
of
algorithms
to
counter
algorithmic
bias
for
fundamental
problems
dhp
12
bs15
zvgrg15
cdkv16
cks
18
cdk
17
kir16
cv17
the
structural
insights
obtained
may
find
use
in
other
algorithmic
settings
related
to
the
rather
broad
scope
of
ranking
problems
our
work
also
suggests
some
open
problems
and
directions
the
first
question
concerns
the
time
can
this
case
and
its
lu
variant
theorem
3.2
implies
that
it
can
be
solved
in
be
improved
to
nearly-linear
time
as
we
do
for
the
variant
theorem
3.3
another
question
is
the
complexity
of
the
constrained
ranking
maximization
problem
in
all
different
variants
when
is
it
in
the
various
constants
appearing
in
our
approximation
algorithms
are
unlikely
to
be
optimal
and
improving
them
remains
important
in
particular
our
approximation
algorithm
for
the
case
of
large
in
theorem
3.4
may
incur
multiplicative
violation
of
constraints
this
could
be
significant
when
dealing
with
instances
where
the
upper
bound
constraints
are
rather
large
uk
k2
in
which
case
such
violation
effectively
erases
all
the
constraints
it
is
an
interesting
open
problem
to
understand
whether
this
violation
can
be
avoided
either
by
providing
different
algorithm
or
by
making
different
assumptions
on
the
instance
in
this
work
we
consider
linear
objective
functions
for
the
the
ranking
optimization
problem
the
objective
is
an
independent
sum
of
profits
for
individual
item
placements
while
this
model
might
be
appropriate
in
certain
settings
there
may
be
cases
where
one
would
prefer
to
measure
the
quality
of
ranking
as
whole
and
in
particular
the
utility
of
placing
given
item
at
the
kth
position
should
also
depend
on
what
items
were
placed
above
it
zcl03
thus
defining
and
studying
suitable
variant
of
the
problem
for
class
of
objectives
on
rankings
that
satisfy
some
version
of
the
diminishing
returns
principle
submodularity
is
of
practical
interest
related
question
that
deserves
independent
exploration
is
to
study
the
complexity
of
sampling
constrained
ranking
from
the
probability
distribution
induced
by
the
objective
rather
than
26
outputting
the
ranking
that
maximizes
its
value
output
ranking
with
probability
proportional
to
its
value
finally
extending
our
results
to
the
online
setting
seems
like
an
important
technical
challenge
which
is
also
likely
to
have
practical
consequences
acknowledgments
we
would
like
to
thank
mohit
singh
and
rico
zenklusen
for
valuable
discussions
on
the
problem
references
afk96
sanjeev
arora
alan
frieze
and
haim
kaplan
new
rounding
procedure
for
the
assignment
problem
with
applications
to
dense
graph
arrangement
problems
in
37th
annual
symposium
on
foundations
of
computer
science
focs
96
burlington
vermont
usa
14
16
october
1996
pages
21
30
1996
amo93
ravindra
ahuja
thomas
magnanti
and
james
orlin
network
flows
theory
algorithms
and
applications
prentice-hall
inc
upper
saddle
river
nj
usa
1993
bae16
drake
baer
the
filter
bubble
explains
why
trump
won
and
you
didn
see
it
coming
november
2016
ny
mag
bcz
16
tolga
bolukbasi
kai-wei
chang
james
zou
venkatesh
saligrama
and
adam
kalai
man
is
to
computer
programmer
as
woman
is
to
homemaker
debiasing
word
embeddings
in
advances
in
neural
information
processing
systems
pages
4349
4357
2016
bma15
eytan
bakshy
solomon
messing
and
lada
adamic
exposure
to
ideologically
diverse
news
and
opinion
on
facebook
science
348
6239
1130
1132
2015
bs15
barocas
and
selbst
big
data
disparate
impact
ssrn
elibrary
2015
bt52
ralph
allan
bradley
and
milton
terry
rank
analysis
of
incomplete
block
designs
the
method
of
paired
comparisons
biometrika
39
324
345
1952
cdk
17
elisa
celis
amit
deshpande
tarun
kathuria
damian
straszak
and
nisheeth
vishnoi
on
the
complexity
of
constrained
determinantal
point
processes
in
approx
random
2017
pages
36
36
22
2017
cdkv16
elisa
celis
amit
deshpande
tarun
kathuria
and
nisheeth
vishnoi
how
to
be
fair
and
diverse
fairness
accountability
and
transparency
in
machine
learning
2016
cg98
jaime
carbonell
and
jade
goldstein
the
use
of
mmr
diversity-based
reranking
for
reordering
documents
and
producing
summaries
in
proceedings
of
the
21st
annual
international
acm
sigir
conference
on
research
and
development
in
information
retrieval
pages
335
336
acm
1998
chrg16
matthew
costello
james
hawdon
thomas
ratliff
and
tyler
grantham
who
views
online
extremism
individual
attributes
leading
to
exposure
computers
in
human
behavior
63
311
320
2016
27
chv57
elisa
celis
lingxiao
huang
and
nisheeth
vishnoi
multiwinner
voting
with
fairness
constraints
in
ijcai-ecai
2018
arxiv
1710.10057
ck05
chandra
chekuri
and
sanjeev
khanna
polynomial
time
approximation
scheme
for
the
multiple
knapsack
problem
siam
comput
35
713
728
2005
ckc
08
charles
la
clarke
maheedhar
kolla
gordon
cormack
olga
vechtomova
azin
ashkan
stefan
bu
ttcher
and
ian
mackinnon
novelty
and
diversity
in
information
retrieval
evaluation
in
proceedings
of
the
31st
annual
international
acm
sigir
conference
on
research
and
development
in
information
retrieval
pages
659
666
acm
2008
ckk16
elisa
celis
peter
krafft
and
nathan
kobe
sequential
voting
promotes
collective
discovery
in
social
recommendation
systems
in
proceedings
of
the
tenth
international
conference
on
web
and
social
media
cologne
germany
may
17
20
2016
pages
42
51
2016
cks
18
elisa
celis
vijay
keswani
damian
straszak
amit
deshpande
tarun
kathuria
and
nisheeth
vishnoi
fair
and
diverse
dpp-based
data
summarization
corr
abs
1802.04023
2018
ct17
elisa
celis
and
siddartha
tekriwal
what
do
users
want
in
sites
quality
or
diversity
in
international
conference
on
computational
social
science
ic2s2
2017
cv17
elisa
celis
and
nisheeth
vishnoi
fair
personalization
fairness
accountability
and
transparency
in
machine
learning
2017
dhp
12
cynthia
dwork
moritz
hardt
toniann
pitassi
omer
reingold
and
richard
zemel
fairness
through
awareness
in
itcs
new
york
ny
usa
2012
acm
dkns01
cynthia
dwork
ravi
kumar
moni
naor
and
dandapani
sivakumar
rank
aggregation
methods
for
the
web
in
proceedings
of
the
10th
international
conference
on
world
wide
web
pages
613
622
acm
2001
er15
robert
epstein
and
ronald
robertson
the
search
engine
manipulation
effect
seme
and
its
possible
impact
on
the
outcomes
of
elections
proceedings
of
the
national
academy
of
sciences
112
33
e4512
e4521
2015
fj12
uriel
feige
and
shlomo
jozeph
universal
factor
graphs
in
automata
languages
and
programming
39th
international
colloquium
icalp
2012
warwick
uk
july
13
2012
proceedings
part
pages
339
350
2012
fkm
06
ronald
fagin
ravi
kumar
mohammad
mahdian
sivakumar
and
erik
vee
comparing
partial
rankings
siam
journal
on
discrete
mathematics
20
628
648
2006
fks03
ronald
fagin
ravi
kumar
and
dakshinamurthi
sivakumar
comparing
top
lists
siam
journal
on
discrete
mathematics
17
134
160
2003
grsz14
fabrizio
grandoni
ravi
mohit
singh
and
rico
zenklusen
new
approaches
to
multi-objective
optimization
mathematical
programming
146
525
554
2014
28
gs09
sreenivas
gollapudi
and
aneesh
sharma
an
axiomatic
approach
for
result
diversification
in
proceedings
of
the
18th
international
conference
on
world
wide
web
pages
381
390
acm
2009
has96
hastad
clique
is
hard
to
approximate
within
n1
in
proceedings
of
the
37th
annual
symposium
on
foundations
of
computer
science
focs
96
ieee
computer
society
1996
hss03
elad
hazan
shmuel
safra
and
oded
schwartz
on
the
complexity
of
approximating
k-dimensional
matching
in
approx-random
03
pages
83
97
springer
2003
jen76
jenkyns
the
efficacy
of
the
greedy
algorithm
in
proc
of
7th
s-e
conf
on
combinatorics
graph
theory
and
computing
pages
341
350
1976
jk02
kalervo
ja
rvelin
and
jaana
keka
la
inen
cumulated
gain-based
evaluation
of
ir
techniques
acm
transactions
on
information
systems
tois
20
422
446
2002
kir16
keith
kirkpatrick
battling
algorithmic
bias
how
do
we
ensure
algorithms
treat
us
fairly
communications
of
the
acm
59
10
16
17
2016
kmm15
matthew
kay
cynthia
matuszek
and
sean
munson
unequal
representation
and
gender
stereotypes
in
image
search
results
for
occupations
in
proceedings
of
the
33rd
annual
acm
conference
on
human
factors
in
computing
systems
pages
3819
3828
acm
2015
kmr17
jon
kleinberg
sendhil
mullainathan
and
manish
raghavan
inherent
trade-offs
in
the
fair
determination
of
risk
scores
innovations
in
theoretical
computer
science
2017
kv10
ravi
kumar
and
sergei
vassilvitskii
generalized
distances
between
rankings
in
proceedings
of
the
19th
international
conference
on
world
wide
web
pages
571
580
acm
2010
mes06
julia
mestre
greedy
in
approximation
algorithms
in
algorithms
esa
2006
14th
annual
european
symposium
zurich
switzerland
september
11
13
2006
proceedings
pages
528
539
2006
mk60
melvin
earl
maron
and
john
kuhns
on
relevance
probabilistic
indexing
and
information
retrieval
journal
of
the
acm
jacm
216
244
1960
mon95
burt
monroe
fully
proportional
representation
american
political
science
review
89
925
940
1995
mrs
08
christopher
manning
prabhakar
raghavan
hinrich
schu
tze
et
al
introduction
to
information
retrieval
cambridge
university
press
cambridge
2008
pdsat12
debmalya
panigrahi
atish
das
sarma
gagan
aggarwal
and
andrew
tomkins
online
selection
of
diverse
results
in
proceedings
of
the
fifth
acm
international
conference
on
web
search
and
data
mining
pages
263
272
acm
2012
rbcj09
filip
radlinski
paul
bennett
ben
carterette
and
thorsten
joachims
redundancy
diversity
and
interdependent
document
relevance
in
acm
sigir
forum
volume
43
pages
46
52
acm
2009
29
rkj08
filip
radlinski
robert
kleinberg
and
thorsten
joachims
learning
diverse
rankings
with
multi-armed
bandits
in
proceedings
of
the
25th
international
conference
on
machine
learning
pages
784
791
acm
2008
rob77
stephen
robertson
the
probability
ranking
principle
in
ir
journal
of
documentation
33
294
304
1977
sb88
gerard
salton
and
christopher
buckley
term-weighting
approaches
in
automatic
text
retrieval
information
processing
management
24
513
523
1988
spe04
charles
spearman
the
proof
and
measurement
of
association
between
two
things
the
american
journal
of
psychology
15
72
101
1904
spe06
charles
spearman
footrule
for
measuring
correlation
british
journal
of
psychology
1904
1920
89
108
1906
srg13
aleksandrs
slivkins
filip
radlinski
and
sreenivas
gollapudi
ranked
bandits
in
metric
spaces
learning
diverse
rankings
over
large
document
collections
journal
of
machine
learning
research
14
feb
399
436
2013
sri95
aravind
srinivasan
improved
approximations
of
packing
and
covering
problems
in
proceedings
of
the
twenty-seventh
annual
acm
symposium
on
theory
of
computing
29
may-1
june
1995
las
vegas
nevada
usa
pages
268
276
1995
ys17
ke
yang
and
julia
stoyanovich
measuring
fairness
in
ranked
outputs
in
proceedings
of
the
29th
international
conference
on
scientific
and
statistical
database
management
chicago
il
usa
june
27
29
2017
pages
22
22
2017
zcl03
cheng
xiang
zhai
william
cohen
and
john
lafferty
beyond
independent
relevance
methods
and
evaluation
metrics
for
subtopic
retrieval
in
proceedings
of
the
26th
annual
international
acm
sigir
conference
on
research
and
development
in
informaion
retrieval
pages
10
17
acm
2003
zh08
mi
zhang
and
neil
hurley
avoiding
monotony
improving
the
diversity
of
recommendation
lists
in
proceedings
of
the
2008
acm
conference
on
recommender
systems
pages
123
130
acm
2008
zmkl05
cai-nicolas
ziegler
sean
mcnee
joseph
konstan
and
georg
lausen
improving
recommendation
lists
through
topic
diversification
in
proceedings
of
the
14th
international
conference
on
world
wide
web
pages
22
32
acm
2005
zuc07
david
zuckerman
linear
degree
extractors
and
the
inapproximability
of
max
clique
and
chromatic
number
theory
of
computing
103
128
2007
zvgrg15
muhammad
bilal
zafar
isabel
valera
manuel
gomez
rodriguez
and
krishna
gummadi
fairness
constraints
mechanism
for
fair
classification
in
fairness
accountability
and
transparency
in
machine
learning
2015
zws
13
rich
zemel
yu
wu
kevin
swersky
toni
pitassi
and
cynthia
dwork
learning
fair
representations
in
proceedings
of
the
30th
international
conference
on
machine
learning
pages
325
333
2013
30
values
wij
and
common
ranking
metrics
in
information
retrieval
when
proposing
new
ranking
method
it
is
naturally
important
to
evaluate
the
quality
of
the
resulting
output
towards
this
variety
of
ranking
metrics
have
been
developed
ideally
one
would
use
such
metrics
to
compare
how
good
constrained
ranking
is
with
respect
to
quality
in
comparison
to
an
unconstrained
ranking
putting
it
another
way
we
would
like
to
maximize
the
quality
of
the
constrained
ranking
as
measured
by
such
metrics
in
this
section
we
briefly
survey
three
important
classes
of
ranking
metrics
translated
to
our
setting
and
show
that
our
problem
formulation
can
capture
metrics
by
defining
the
values
wij
appropriately
such
metrics
are
often
being
defined
with
respect
to
the
item
quality
often
referred
to
as
relevance
in
the
ir
literature
without
loss
of
generality
we
relabel
the
items
so
that
a1
a2
am
denote
the
qualities
for
for
ease
of
presentation
we
introduce
simple
forms
of
these
metrics
below
often
in
practice
they
are
normalized
for
better
comparison
across
rankings
the
two
are
equivalent
with
respect
to
optimization
we
consider
integral
rankings
ωm
where
if
and
only
if
for
every
and
every
11
xij
and
xij
rank-1
metrics
the
quality
of
the
ranking
is
considered
to
be
the
sum
of
the
quality
of
its
items
where
the
quality
of
the
item
at
position
is
discounted
by
value
that
is
non-increasing
in
in
other
words
getting
the
order
correct
at
the
top
of
the
list
is
more
important
than
getting
it
correct
at
the
bottom
formally
given
ranking
ωm
rank-1
metric
is
defined
as
mr1
ai
xij
for
non-increasing
function
common
examples
are
discounted
cumulative
gain
dcg
jk02
where
log
for
all
and
its
variants
for
rank-1
metrics
we
can
simply
define
wij
ai
let
us
now
show
that
property
holds
for
such
metric
select
any
two
i1
i2
and
j1
j2
by
definition
ai1
ai2
and
j1
j2
and
hence
wi1
j1
wi2
j1
and
wi1
j1
wi1
j2
further
this
implies
that
wi1
j1
wi2
j2
wi1
j2
wi2
j1
ai1
j1
ai2
j2
ai1
j2
ai2
j1
ai1
ai2
j1
j2
so
the
property
holds
bradley-terry
metrics
there
are
variety
of
multiplicative
ranking
metrics
originally
developed
with
the
goal
of
sampling
from
distribution
of
complete
rankings
ωm
for
example
in
the
bradley-terry
model
ai1
bt52
the
quantity
ai
denotes
the
probability
that
item
i1
should
be
ranked
above
item
i2
i2
ai1
this
gives
rise
to
the
metric
mbt
ai
ai
removing
the
denominator
i1
i2
xi1
j1
xi2
j2
j1
j2
31
which
is
the
same
for
all
as
every
pair
of
items
appears
exactly
once
it
is
easy
to
see
that
the
metric
can
be
rewritten
as
mbt
ai
xij
hence
it
is
equivalent
to
maximize
log
mbt
nj
xij
log
ai
by
letting
a0i
log
ai
and
this
is
rank-1
metric
with
non-increasing
and
a0i
and
hence
fits
our
formulation
as
discussed
above
alignment
metrics
one
can
also
consider
metrics
that
depend
only
on
the
difference
in
the
item
positions
between
two
rankings
let
ωm
be
the
optimal
unconstrained
ranking
this
corresponds
to
sorting
is
in
non-increasing
order
of
ai
alignment
metrics
are
defined
with
respect
to
the
positions
of
the
items
in
and
we
give
some
examples
below
given
ranking
ωm
in
our
setting
spearman
footrule
spe06
corresponds
to
mf
2m
xij
ij
and
similarly
spearman
rho
spe04
corresponds
to
mρ
2m
xij
ij
these
vary
slightly
from
the
usual
definitions
as
it
is
for
partial
rather
than
complete
ranking
and
we
measure
similarity
rather
than
difference
the
former
is
in
line
with
partial
ranking
versions
of
spearman
footrule
and
spearman
rho
as
in
fks03
fkm
06
and
for
the
latter
we
add
value
to
maintain
non-negativity
and
monotonicity
the
above
metrics
can
be
naturally
captured
in
our
formulation
by
letting
wij
2m
or
wij
2m
respectively
where
is
such
that
ij
here
for
any
two
i1
i2
and
j1
j2
it
is
clear
that
wi1
j1
wi2
j1
and
wi1
j1
wi1
j2
as
desired
furthermore
it
is
not
difficult
to
show
via
simple
but
tedious
case
analysis
of
the
possible
orderings
of
j1
j2
j1
j2
that
the
desired
property
wi1
j1
wi2
j2
wi1
j2
wi2
j1
holds
one
can
also
think
of
weighted
versions
of
these
metrics
as
introduced
in
kv10
for
which
these
observations
generalize
32